%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Adolfo) ()
%%Title: (ATAGO-LOGO.ai)
%%CreationDate: 4/5/2011 9:19 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registro])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 250.5 249.5 250.5 249.5
%AI3_TileBox: -47.7202 -171.0195 547.7197 671.02
%AI3_DocumentPreview: None
%AI5_ArtSize: 500 500
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -183 560 1 942 630 18 1 0 74 118 0 0
%AI5_OpenViewLayers: 73
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 4769 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD87FFA9855B
%5B3737377F85FD74FF7E5B0E0F080F08855A0F080F0885FD70FF850F0F09
%0F090F0F0F5BFFFF37090F095BFD6FFF85A9A9A95B37080F085BFFFFA90F
%080F0885FD6AFFA9FD04FFA9AFA9FFFFFF370F5BFFFFFF5B0F090F31FD31
%FFAFFD1AFFA95B5B5BFD18FFA95B5AFF7F31080F080F0E7FFFFF5A7FFFFF
%FF5B080F080FA9FD05FF30310E310E5BFFFFFF5B0E310E310E310E310E31
%0E315BFFFFFF5B310E310E31A9FD05FFA95B30310E0F080F0E0F0E375BFF
%FFFF7F310E310E0F080F0E0F0E375AFFFF85305B7E8530FD16FFAF377FFF
%5B0F09FD050F0937FD06FF5BFD040FFD05FF5B0F0F0F090F0FFFFFFF310F
%090F090F090F0F0F090F095BFFFFA90F090F090F0985FD05FF37090F090F
%090F090F090F090F37FF850F090F0F0F090F090F090F090F37FF5BA95B5B
%85857FFD14FFA90F7FFF7F0F080F080F080F080F0885FD04FFA931080F08
%5BFD04FFA90F080F0E0F080F37FFFF5B080F080F080F080F080F080F5BFF
%FF5B080F0831080F08FD04FFA9080F080F0F310E313131080F080FA95B08
%0F080F0E0F080F0E0F080F080FA95BA93730FF857FFD14FF0F5BFFFF3108
%0F0F0F090F0F0F090F5BFD04FF5B080F0F0F7FFD04FF5B090F09FF5B0F09
%0FA9FFA9FFA9FFA9370F0F31FFA9AFA9FFFFA9080F0985A90F0F0F5BFFFF
%FF7F0F0F0F85FD06FF850F3131AF310F0F3185FD06FF5B080F0FAF5B8585
%A9855B85FD13FF370EFFFFA9080F080F080F080F080F08AFFD04FF300908
%0F0EFD04FFA9080F085BFFAF080F085BFD06FF0E0F0837FD06FF3009080F
%A9FF300F080FA8FFFF7F080F0EFFFFFFA9AFA8AFA9A984AFA931080F5AFD
%07FF850F080F85FF307F85375AFD13FF850985FFFF85FD090F09A9FD05FF
%AF0F0F0985FD04FF370F0F0FA9FFFF5B090F0FA9FD05FF370F0F31FD05FF
%850F0F0F5BFFFFFF0F0F095BFFFF5B0F0F31FFFFFF5B09FD040F310FAF31
%0F0985FD07FFA9090F0FA9FFFF7F8585FD14FF080FA9FFFFA9080F080F08
%0F080F0FA9FFFFA9AFFFFFFF5B085BFD04FFA90F080F31FFA9FF850F080F
%31FD05FF0E0F0837FD05FF37080F08A9A9AFA937080F08AFFF7F080F0EFF
%FFFF5B09080F080F080FA931080F5BFD07FF850F080F85FD18FF850F08A9
%FFFFFF37090F080F09315BFFFFFFA9317FFFFFFF8537FD05FF5B090F0931
%0F0F09310F0F090FA9FD04FF37080F37FD04FF8508FD0B0F37FF7F0F090F
%AFFFFFFFA9AFA9850F0F0FAF310F085BFD07FF85090F09AFFD18FF5B080F
%0EFFFFFFA985365B5AA9FD04FF5B0F0885FD04FFAFFD04FFA9080F080F08
%0F0809080F080F0837FD04FF0E0F085BFD04FF0E0F080F0809080F080F08
%0F080FA885080F08377F857EA98585300F080FA937080F08375A5B365B5A
%5B080F080FA8FD18FF310F0F0F31FD0AFFA9310F090F85FD09FF310F0F0F
%7FA9858585A9855B090F09A9FFFFFF37090F37FFFFFF850F090F5BA985A9
%FD04850F0F095BAF0F090F090F090F090F090F0F0F31FF5B0F090F090F09
%0F090F09FD040FFD19FF37080F080F085B5AA9A9AF85855B31080F080F08
%A9FD08FF7F09080F5BFD07FFA90F080F0FFFFFFF0F0F0837FFFFA931080F
%0EFD08FF5B080F08A9850F080F080F080F080F080F0FA9FFFF310F080F08
%0F080F080F080F0EA9FD19FF5B0F0F0F090F090F090F0F0F080F0F0F090F
%090FAFFD08FFAF85A985FD09FFA9A985A9FFFFFFAF85A9A9FFFFFF85A985
%AFFD08FFFD05A9FFFFAFFD04857F8585A9A9FD05FFA9A9FD04857F8585A9
%A9FD1BFFAF080F080F080F080F080F080F080F0809083785FD6DFFA90F0F
%09FD070F090F090F37A9FD71FF5B0F080F0809080F08313085A9FD75FFA9
%85857F8585AFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD54FF
%FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Calcando) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Plugin Fusiones de Adobe) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (S\355mbolos de Adobe) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\341fico de Adobe) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\363n de Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\363n de Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Forma compuesta de Adobe) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Degradado lineal)
(Degradado lineal) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F202121222324252627292A2B2C2D
2E2F303233343637393A3B3C3D3E3F41424344454648494A4B4C4D4E4F5051525354565758595A5C
5D5F606161626365666768696A6B6C6D6E6F707172737476777778797A7B7C7D7E7F808081828383
84858686878889898A8B8C8D8E8F8F90919192939293949495969697989899999A9B9B9C9D9D9E9E
9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAABABACACADADADAEAEAEAFAFB0B0B0AFB0B0
B1B1B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B8B8B9B9B9BABA
>
<
0000010203040505060708090A0B0C0D0E0F10111213131415161718191A1B1C1C1D1E1F20212122
232425262728292A2B2C2D2E2F2F303132343536373738393A3B3C3D3D3E3F404142434445464749
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061616263646566676769696A6B6C6C6D6E
6F707071727273747575767778797A7B7C7C7D7E7F808081818283838485858686878888898A8A8B
8C8D8D8E8F8F909091929293939495959696979898999A9A9B9C9C9D9D9E9E9F9FA0A1A1A2A3A3A4
A5A5A6A7A7A8A9A9AAAAABACACADADAEAFB0B1B1B2B3B4B5B5
>
<
0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1A1B1C1D1E1F1F20
2122232425262728292A2B2B2C2D2E2F2F3031323233343536373738393A3B3C3D3D3E3F40414243
4445464748494A4B4C4D4D4E4F50515253535455565758595A5B5B5C5D5D5E5F5E5F606061626263
6465656667676868696A6A6B6C6D6E6F70707171727373747575767677787879797A7B7B7C7D7D7E
7E7F8080818182828383848585868687888889898A8B8B8C8D8D8E8E8F8F90909191929293949495
9595969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010101010102020203030404040505050607070809090A
0A0B0C0D0E0F1011111214151618191A1B1C1D1E1F212223242527282A2B2D2E2F3132343637393A
3C3E3F41434546484A4C4D4F51535557595B5D5F61636567696B6D6E70717476787A7C7F81838587
8A8C8E919395979A9C9FA1A3A6A8AAADAFB2B4B7B9BBBEC0C2
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Degradado radial)
(Degradado radial) 1 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F202121222324252627292A2B2C2D
2E2F303233343637393A3B3C3D3E3F41424344454648494A4B4C4D4E4F5051525354565758595A5C
5D5F606161626365666768696A6B6C6D6E6F707172737476777778797A7B7C7D7E7F808081828383
84858686878889898A8B8C8D8E8F8F90919192939293949495969697989899999A9B9B9C9D9D9E9E
9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAABABACACADADADAEAEAEAFAFB0B0B0AFB0B0
B1B1B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B8B8B9B9B9BABA
>
<
0000010203040505060708090A0B0C0D0E0F10111213131415161718191A1B1C1C1D1E1F20212122
232425262728292A2B2C2D2E2F2F303132343536373738393A3B3C3D3D3E3F404142434445464749
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061616263646566676769696A6B6C6C6D6E
6F707071727273747575767778797A7B7C7C7D7E7F808081818283838485858686878888898A8A8B
8C8D8D8E8F8F909091929293939495959696979898999A9A9B9C9C9D9D9E9E9F9FA0A1A1A2A3A3A4
A5A5A6A7A7A8A9A9AAAAABACACADADAEAFB0B1B1B2B3B4B5B5
>
<
0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1A1B1C1D1E1F1F20
2122232425262728292A2B2B2C2D2E2F2F3031323233343536373738393A3B3C3D3D3E3F40414243
4445464748494A4B4C4D4D4E4F50515253535455565758595A5B5B5C5D5D5E5F5E5F606061626263
6465656667676868696A6A6B6C6D6E6F70707171727373747575767677787879797A7B7B7C7D7D7E
7E7F8080818182828383848585868687888889898A8B8B8C8D8D8E8E8F8F90909191929293949495
9595969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010101010102020203030404040505050607070809090A
0A0B0C0D0E0F1011111214151618191A1B1C1D1E1F212223242527282A2B2D2E2F3132343637393A
3C3E3F41434546484A4C4D4F51535557595B5D5F61636567696B6D6E70717476787A7C7F81838587
8A8C8E919395979A9C9FA1A3A6A8AAADAFB2B4B7B9BBBEC0C2
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Puesta de sol en el desierto)
(Puesta de sol en el desierto) 0 6 Bd
[
<
434546464748494B4B4C4D4E4E4F50515153545555565757585A5B5B5C5D5D5E5F5F606261636464
6566666869696A6A6B6C6C6D6D6E6E6F707071717272737375757676777879797A7A7B7B7B7C7C7D
7D7D7E7E7F7F7F808080808181818182828282
>
<
62636466666869696B6C6D6E6F70717273737475767778797A7B7C7C7D7E80818283838485868788
88898A8B8C8C8D8F908F909193929494949596969799989A9B9B9C9E9D9F9FA0A1A1A2A2A3A3A4A4
A5A5A6A6A7A7A8A8A8AAA9A9AAAAAAABABABAB
>
<
2F302F30313031323132333132333233333435333435343536353636373736373637373839383938
3A39393839393A3B3A3C3B3C3A3C3B3C3C3B3C3C3D3C3D3C3D3D3D3D3E3E3F3F3E3E3F3F3E403F3F
3F3F3E403F3F4040403E40413F3F4140404040
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000101010101010101010101020202020202020302030303030304040404050505050505050505
06060607070707070707080808080908080808
>
<
C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9
A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A9999989897979696959595949493
93939292919191909090908F8F8F8F8E8E8E8E
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483
838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A6969
68686767666665656564646463636362626262
>
<
B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C
9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A
89898988888887878787868686868585858585
>
4 %_Br
<
262728292A2B2D2E2F30313233363738393A3C3D3D3E404143
>
<
4A4B4C4D4E4F4F5051525354555657585A5B5A5B5D5E5F6062
>
<
555352504F4D4D4B4A4847454242403F3C3B3A39363532312F
>
0.000031
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8C7C6C5
>
<
BDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7
>
<
A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4
>
4 %_Br
<
050708090A0C0D0E10111314151718191A1B1D1E1F20212322232526
>
<
333536353638393A3B3B3C3D3F403F4142434344454645464849484A
>
<
7C7A78797775747271716F6E6C6A6A6866646462605E5E5C5A585855
>
0.000031
<
F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDE
>
<
D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBD
>
<
929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7
>
4 %_Br
<
00000000000000000000000000000000000000010000000000000101010202020102020303030304
04040505040405050505050505050505040404050505
>
<
82807F7E7E7D7B7A79787776747372706F6F6E6D6C6A696866656362615F5E5D5C5B595857555453
51504E4D4C4B494846454442403F3D3C3B3938373533
>
<
96959695959493949392939291919090908F8E8F8E8D8D8D8C8C8B8B8A8A8A898988888887878686
86858685848383838282818080807F7E7F7E7D7C7D7C
>
0.000031
<
F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6
F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
>
<
9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2
>
<
6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282
838484858687878889898A8B8C8C8D8E8E8F90919192
>
4 %_Br
<
2B2A2A29282927262525242323222121201F1E1E1D1B1B1A1919181615151413131110100F0D0B0C
0A09090806060503020200000000
>
<
9C9C9C9B9A9A999A9997989796969594959493939293929191908F908F8E8E8D8C8D8C8C8B8A8A89
8889888787868586858584838382
>
<
DEDCDBD9D8D7D6D4D3D2D0CFCECCCBC9C8C7C6C4C3C1C0BFBDBCBAB8B6B5B4B3B2B0AFADACABAAA9
A8A6A5A4A2A2A09F9E9C9B999896
>
<
07060606050505050404040303030303020202020101010101010100000000000000000000000000
0000000000000000000000000000
>
<
CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9
EAEBEBECEDEDEEEFF0F0F1F2F2F3
>
<
75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E
8F8F909191929393949495969697
>
<
32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A
5B5C5D5E5F606162636465666768
>
4 %_Br
[
0.509056 0.671748 0.25156 0.033326 0.556863 0.384314 0.521569 2 50 100 %_BS
%_0.509056 0.671748 0.25156 0.033326 0.556863 0.384314 0.521569 2 50 100 Bs
0.262547 0.382696 0.182864 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS
%_0.262547 0.382696 0.182864 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs
0.14786 0.288518 0.334783 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 %_BS
%_0.14786 0.288518 0.334783 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 Bs
0.021485 0.201694 0.486519 0.000031 0.972549 0.823529 0.572549 2 48 38.764 %_BS
%_0.021485 0.201694 0.486519 0.000031 0.972549 0.823529 0.572549 2 48 38.764 Bs
0.000031 0.508476 0.58999 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS
%_0.000031 0.508476 0.58999 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs
0.168124 0.612848 0.869535 0.027955 0.807843 0.458824 0.196078 2 50 0 %_BS
%_0.168124 0.612848 0.869535 0.027955 0.807843 0.458824 0.196078 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial cobre)
(Radial cobre) 1 4 Bd
[
<
000000000101030304040605070606080709090A0A0B0B0C0C0D0E0F0F1010111112121313141415
151616171718181A1A1C1C1D1D1F1F202020212122222323242426262727282829292A2A2B2B2D2D
2E2E2F2F30
>
<
1112121314161517181A191A1B1D1C1D1F201F20222322232525252628282A292A2B2D2C2D2E2F2F
30313233333436373838393A3C3B3C3D3F403F41424344444546474747494A4B4B4C4D4E4F4F5051
5253535455
>
<
292A2C2C2E2D2F30313234343536373838393B3C3C3D3F4040414342434445464748484A4B4C4C4E
4E4F5051525354555658595A5B5C5D5E5F5F6162636364666768686A6B6B6C6D6F6F707172737475
767779797A
>
0.000031
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEC
ECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9
D8D8D7D7D6
>
<
F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4
D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4
B3B2B2B1B0
>
<
DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A89
>
4 %_Br
<
3031313233333436353738393A3B3C3C3D3E3F3F404142424344444545464647474848494A4B4A4B
4C4C4C4D4D4E4E4E4F4E4F4F504F5051515151525252525353535354545454555556555556565656
575756575758575757585757585857575858575758
>
<
5556575858595A5B5C5D5E6061626364656465666768696A6B6C6D6E6F6F71717273747576757677
78797A7B7B7C7E7E7F8081828284848586878888898A8B8C8C8E8E8F909191919293949495969798
99999B9C9C9D9E9FA0A1A2A3A4A4A6A7A8A8AAABAC
>
<
7A7B7C7D7F7E7F808182838485868788898A8B8C8D8E8F909091919293949495969798999B9C9D9E
9F9FA0A1A2A3A4A5A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B9BABBBDBEBFC0C1C3C4C5C7C8
C9CBCCCDCFD0D1D3D4D5D6D8D9DADCDEDFE1E3E5E6
>
<
0000000000000000000000000001010101010102020203030303030404050506060707080809090A
0B0C0C0D0D0E0F0F10111213141415161718191A1B1B1C1E1F1F20222425252728292A2B2D2E2F30
31333334363738393B3C3D3E40414243454647494A
>
<
D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBA
B9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C
9B9A9A999897979695949493929191908F8E8E8D8C
>
<
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A6968676665
64636261605F5E5D5C5B5A59585756555453525150
>
<
89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827
>
4 %_Br
<
585858585959595A5A5A5B5B5B5B5B5B5C5C5C5C5C5C5C5C5C5D5D5D5C5C5C5C5D5D5D5C5C5C5D5D
5D5D5E5E5E5E5E5E5E5E5E5F5F60616161
>
<
ACACADAEB0B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C4C5C6C7C9CBCCCDCED0D1D2D4D5D6D7
D8D9DBDCDEDFE1E2E4E6E7E8E9EAECEDEE
>
<
E6E5E7E6E6E8E8E7E9E8E8E9E9E8EAEAE9EAE9E8EAE9EAECECEBEEEDECECEAEBEAE9EBEAEAECEBEA
ECEBE9ECEAE9EBEAE9EBEAE8E9E8E6E8E7
>
<
4A4C4D4F505253555658595B5C5E6061636566686A6B6D6F707274757677787A7B7D7F8082848587
888A8C8D8F91939596989A9B9D9EA0A2A3
>
<
8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A5958575655
>
<
504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817
>
<
27272626262525252424242323232222222121212020201F1F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A
1919191818181717171616161515151414
>
4 %_Br
[
0.000031 0.066224 0.161929 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 %_BS
%_0.000031 0.066224 0.161929 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 Bs
0.187747 0.332952 0.479042 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS
%_0.187747 0.332952 0.479042 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs
0.343175 0.672847 0.903349 0.290562 0.54902 0.313726 0.152941 2 50 78.0899 %_BS
%_0.343175 0.672847 0.903349 0.290562 0.54902 0.313726 0.152941 2 50 78.0899 Bs
0.381567 0.934234 0.905089 0.639734 0.333333 0.090196 0.078431 2 50 100 %_BS
%_0.381567 0.934234 0.905089 0.639734 0.333333 0.090196 0.078431 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Suavizar hacia negro)
(Suavizar hacia negro) 0 2 Bd
[
0.730129
0.711116
0.636835
0.762051
0.137255
0.121569
0.12549
4 %_Br
[
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 Bs
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 0 %_BS
%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
F3F2F1F1F0EFEEEEEDEDECEBEAE9E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD8D7D6D5D4D3D2D1D0CF
CECDCCCAC9C8C7C6C5C4C3C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1AFAEADACABAAA9A8A6A5A4A3A2A0
9F9E9D9C9A999896959492918F8E8D8B8A89878685848281807F7E7D7B7A797877757472716F6E6C
6B696866656362615F5D5C5A5857555452514F4E4D4B4A4847454442403F3D3B3A3837353332302E
2D2B292826242321201E1C1A1917151312100E0D0B0907050402000000000000000000
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFEFEFEFEFFFFFFFFFF
FFFFFEFEFFFEFEFEFEFEFDFDFDFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFAFAFAFA
FAFAFAF9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F5F6F6F6F6F6F5F5F5F5F5F5F5F5F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F0F0F0EFEFEEEE
>
<
2E2E2E2D2D2E2D2C2A2929282828292929292A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2929292726
262625252424232323232323242222222222222222222222222121211F1E1E1E1E1E1E1E1E1E1F1F
1F1F1F1D1D1D1D1E1E1E1E1F1E1E1E1E1E1B1B1B1B1C1B1C1C1C1C1D1D1D1E1D1B1B1B1B1B1B1B1B
1B1B1B1B1B1C1C191919191919191818181818181919161616161616161616161616161616131414
1414131313131313141414141112121212131313131313131314141212131314141515
>
<
14141414141413131212121111111110101010101010100E0E0E0F0F0F0F0F0F0F0F1010100F0E0E
0E0D0D0D0D0D0C0C0C0C0C0C0C0A0A0A0A0A0A0A0909090909090909080808070707070707070707
07070706060606060505050505050404040303030303030303030303030302020101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
27272727272626262626262626262525252525252525252424242424242424232323232323232323
2222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E
1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A
19191919191919191818181818181818181717171717171717171616161616161616161515151515
1515151514141414141414141313131313131313131212121212121212121111111111
>
<
6F6F6F6F6F6F6F6F7070707070707070707070707070707171717171717171717171717171717272
72727272727272727272727272737373737373737373737373737373747474747474747474747474
74747475757575757575757575757575757676767676767676767676767676767777777777777777
777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A
7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C
>
4 %_Br
<
C1C2C2C3C3C4C4C4C5C5C5C6C6C7C7C7C8C9CACACBCBCCCCCDCDCDCECECECFCFD0D0D1D1D2D2D3D3
D4D4D5D5D6D6D6D7D7D7D8D9D9DADADBDBDDDDDDDEDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E6E6E7
E7E8E8E9E9E9E9EAEAEBEBECECEDEDEEEFEFEFF0F0F1F1F1F2F2F3F3F3F3F3F3F3
>
<
3B3D3E4042444647494B4D4E50525456585A5C5D5F61636466686A6B6D6F7072747577797A7C7D7F
8182848687898A8C8E8F9192949597999B9EA0A2A4A5A7A9AAACADAFB1B3B5B6B8BABCBDBFC1C3C4
C6C8C9CBCCCDD0D1D4D5D7D9DBDDDFE0E3E4E6E8EAECEDEFF1F3F5F6F8FAFBFDFF
>
<
38383738373738373736373836373637373637383637353637353634353534343334343334323333
323231313230313230312F30302F2F2E2E2E2C2D2C2C2D2B2C2B2B2C2B2B2A2A2B2A2A2B292A2929
2A29292828292828272828272826272827272627282627282627262728282B2B2E
>
<
00000000000000000000000000000101010101010101010102020202020302030303030304040404
0405040505050606060606070707070708080808080809090909090A090A09090A090A0B0A0B0A0B
0C0B0B0A0B0B0B0B0B0B0C0C0C0C0D0D0D0E0D0E0F0F1010101110111212131314
>
<
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
<
B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B
9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A8989888787868585848483
82828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F
>
4 %_Br
<
D5D5D5D4D4D4D4D4D4D4D3D3D3D3D3D3D2D2D2D2D2D2D2D2D2D1D1D1D1D1D1D0D0D0D0D0CFCFCFCF
CFCFCECECECECECECDCDCDCDCCCCCCCCCCCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C8C8C8
C8C8C8C7C7C7C7C7C7C6C6C6C6C6C6C5C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C1C1
>
<
3C3C3C3B3B3B3B3C3C3B3B3B3B3C3B3B3B3B3C3A3B3B3B3B3B3A3A3B3B3B3A3A3A3B3B393A3A3A3B
3B3A3A3B3B3C3A3A3B3B3B3C3A3A3A3B3B3A3A3A3B3B3A3A3A3B3B3C3A3B3B3B3C3A3B3B3B3C3C3B
3B3B3C3C3B3B3B3C3C3B3B3B3C3C3C3B3B3C3C3C3B3B3B3C3C3A3A3B3B3C3C3A3A3B
>
<
E4E2E0DFDDDCDAD9D7D6D4D3D1CFCECCCAC9C7C6C5C3C2C0BEBDBBBAB8B6B5B4B2B1AFAEADABA9A8
A6A5A4A2A19F9E9D9B999896959392908F8C8B898786858482817F7D7D7B797876757472706F6D6C
6A696765656362605F5E5C5B5957555553514F4E4D4B4A48464543413F3D3C3B3938
>
<
12121211111111111110101010100F0F0F0F0F0D0D0D0D0D0D0C0C0C0C0C0B0C0C0C0C0B0B0B0B0B
0B0A0A0A0A0A09090909090908080807070606060605050505050404040404040403030303030302
02020202020202010101010101010100000000000000000000000000000000000000
>
<
1E1E1E1E1E1F1F1F1F1F1F1F1F1F2020202020202020212121212121212121222222222222222222
23232323232323232424242424242424242525252525252525252626262626262626272727272727
27272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B
>
<
83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A
8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909091919191919192
92929292939393939394949494949495959595959696969696979797979797989898
>
<
4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768
696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
1D1F1F21222324252628292A2B2C2D2E2F3031333335363738393A3C3D3E3F40424344454748494A
4B4C4D4E4F5052535455565758595A5B5C5D5E5F6061626364656668696A6A6B6C6D6E6F70717273
7475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8D8E8F9091929394949596979898
999A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A8A9AAAAABACADAEAEAFB0B1B2B2B3B4B4B5B6B6B7B8
B8B9BABABBBCBCBDBEBEBFBFC0C1C2C2C3C3C4C4C5C6C6C7C7C8C8C9C9CACBCBCCCDCDCECECFCFD0
D0D0D1D1D2D2D2D3D3D4D4D5D5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010001000201020102010302
01020103020302030204030504050507060807090809090A090B0A090A0A0B0A0C0B0C0C0D0D0E0D
0F0E100F11101111121213131413131414151516161717181719181A191B1A1C1B1D1C1E1D1F1E1E
1F1F2020212122222423252426252727282829292A2A2B2B2D2C2C2E2D2F2F303032323333343435
353736383739383A3A3B3B3C3C
>
<
DADADBDBDCDBDCDCDCDCDDDCDDDCDDDDDDDDDEDEDFDFDFDFDFDFE0E0E0E0DFE0E0E1E1E2E2E3E3E3
E3E4E4E5E5E6E5E5E5E6E5E6E6E6E6E6E6E6E7E7E7E7E8E8E8E8E8E8E8E9E9E9E9E8E8E8E9E9E9E9
E9E9E9EAEAEAEAEBEBEBEAEAEBEBEBECECEDECECEDEDEDEDEDEDEDEDEDEDEDEDECEDEDECECECEDED
EDEDEEEDEEEEEEEFEFEFEFEFEEEEEEEEEFEFEFEFEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEEEDEDED
EDEDEDEDEDEDECECECECECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9EAEAE9E9E9E9E9E9E8E8E8
E7E6E7E6E6E6E6E6E4E4E4E3E4
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000101010101
01010101020202020202030303030404040405040505060506060607060707080809090A0A0B0B0C
0C0C0C0D0D0F0E101011111212
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E
>
<
E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3
C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0
AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D
9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A89
89888887878686858584848383
>
<
282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D
2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F30303030303030303031313131313131
31323232323232323232333333333333333334343434343434343535353535353535353636363636
36363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F
40404040404040404141414141
>
4 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000101020202030303030404050504
040405050505050506060707070808080909090A0A0B0B0B0B0C0C0D0D0E0E0F0F0E0E0F0F0F0F10
1010111112121213131313141414141414151515151616161717181717171818181819191A1A1B1B
1C1C1D1D
>
<
F0EFEFEEEEEDEDECECEBEAEAE9E8E8E7E7E6E5E4E4E3E3E2E1E1E0DFDFDEDDDDDCDBDAD9D9D8D7D6
D5D4D3D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABA9A8A7A6A5A4A3A1A09F9E9D9C9A99989795949392908F8E8D8B8A89878685848381807F
7E7D7B7A7877757472716F6E6D6B6A696766646361605F5D5C5A5957555452514F4E4D4B4A484745
4442413F3E3C3B3937363432302F2D2B2928262422201F1D1B1917161413110F0D0C0A0806040200
00000000
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0DFDFDFDFDFDFE0E0E0E0E0E1E1E1E2E2E2E2E2E3E3E3E4E4E4E4E4E4E4E4E4E4E4E4E3E3E3
E3E3E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E6E6E6E6E7E7E7
E7E7E7E6E6E6E5E4E4E4E5E5E5E5E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E3E3E3
E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E1E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0DFDFDEDE
DDDCDBDA
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2
>
<
1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D
6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
E6E7E8E9
>
<
24242424242424242424242424242424242424242424242424242525252525252525252525252525
25252525252525252525252525252525252525252525252525252525252525252525252525262626
26262626262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272727272728282828282828282828282828282828282828282828
28282828
>
4 %_Br
[
0.000031 0.932036 0.082826 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS
%_0.000031 0.932036 0.082826 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs
0.9523 0.999176 0.181704 0.079255 0.164706 0.152941 0.435294 2 50 80 %_BS
%_0.9523 0.999176 0.181704 0.079255 0.164706 0.152941 0.435294 2 50 80 Bs
0.75787 0.230564 0.218326 0.000031 0.168627 0.596078 0.701961 2 50 60 %_BS
%_0.75787 0.230564 0.218326 0.000031 0.168627 0.596078 0.701961 2 50 60 Bs
0.834409 0.234318 0.89218 0.069184 0.117647 0.513726 0.254902 2 50 40 %_BS
%_0.834409 0.234318 0.89218 0.069184 0.117647 0.513726 0.254902 2 50 40 Bs
0.114137 0.000031 0.855528 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS
%_0.114137 0.000031 0.855528 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs
0.000031 0.939788 0.891905 0.00058 0.92549 0.117647 0.141176 2 50 0 %_BS
%_0.000031 0.939788 0.891905 0.00058 0.92549 0.117647 0.141176 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000101020202030303030404050504
040405050505050506060707070808080909090A0A0B0B0B0B0C0C0D0D0E0E0F0F0E0E0F0F0F0F10
1010111112121213131313141414141414151515151616161717181717171818181819191A1A1B1B
1C1C1D1D
>
<
F0EFEFEEEEEDEDECECEBEAEAE9E8E8E7E7E6E5E4E4E3E3E2E1E1E0DFDFDEDDDDDCDBDAD9D9D8D7D6
D5D4D3D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABA9A8A7A6A5A4A3A1A09F9E9D9C9A99989795949392908F8E8D8B8A89878685848381807F
7E7D7B7A7877757472716F6E6D6B6A696766646361605F5D5C5A5957555452514F4E4D4B4A484745
4442413F3E3C3B3937363432302F2D2B2928262422201F1D1B1917161413110F0D0C0A0806040200
00000000
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0DFDFDFDFDFDFE0E0E0E0E0E1E1E1E2E2E2E2E2E3E3E3E4E4E4E4E4E4E4E4E4E4E4E4E3E3E3
E3E3E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E6E6E6E6E7E7E7
E7E7E7E6E6E6E5E4E4E4E5E5E5E5E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E3E3E3
E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E1E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0DFDFDEDE
DDDCDBDA
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2
>
<
1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D
6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
E6E7E8E9
>
<
24242424242424242424242424242424242424242424242424242525252525252525252525252525
25252525252525252525252525252525252525252525252525252525252525252525252525262626
26262626262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272727272728282828282828282828282828282828282828282828
28282828
>
4 %_Br
<
1D1F1F21222324252628292A2B2C2D2E2F3031333335363738393A3C3D3E3F40424344454748494A
4B4C4D4E4F5052535455565758595A5B5C5D5E5F6061626364656668696A6A6B6C6D6E6F70717273
7475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8D8E8F9091929394949596979898
999A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A8A9AAAAABACADAEAEAFB0B1B2B2B3B4B4B5B6B6B7B8
B8B9BABABBBCBCBDBEBEBFBFC0C1C2C2C3C3C4C4C5C6C6C7C7C8C8C9C9CACBCBCCCDCDCECECFCFD0
D0D0D1D1D2D2D2D3D3D4D4D5D5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010001000201020102010302
01020103020302030204030504050507060807090809090A090B0A090A0A0B0A0C0B0C0C0D0D0E0D
0F0E100F11101111121213131413131414151516161717181719181A191B1A1C1B1D1C1E1D1F1E1E
1F1F2020212122222423252426252727282829292A2A2B2B2D2C2C2E2D2F2F303032323333343435
353736383739383A3A3B3B3C3C
>
<
DADADBDBDCDBDCDCDCDCDDDCDDDCDDDDDDDDDEDEDFDFDFDFDFDFE0E0E0E0DFE0E0E1E1E2E2E3E3E3
E3E4E4E5E5E6E5E5E5E6E5E6E6E6E6E6E6E6E7E7E7E7E8E8E8E8E8E8E8E9E9E9E9E8E8E8E9E9E9E9
E9E9E9EAEAEAEAEBEBEBEAEAEBEBEBECECEDECECEDEDEDEDEDEDEDEDEDEDEDEDECEDEDECECECEDED
EDEDEEEDEEEEEEEFEFEFEFEFEEEEEEEEEFEFEFEFEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEEEDEDED
EDEDEDEDEDEDECECECECECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9EAEAE9E9E9E9E9E9E8E8E8
E7E6E7E6E6E6E6E6E4E4E4E3E4
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000101010101
01010101020202020202030303030404040405040505060506060607060707080809090A0A0B0B0C
0C0C0C0D0D0F0E101011111212
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E
>
<
E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3
C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0
AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D
9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A89
89888887878686858584848383
>
<
282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D
2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F30303030303030303031313131313131
31323232323232323232333333333333333334343434343434343535353535353535353636363636
36363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F
40404040404040404141414141
>
4 %_Br
<
D5D5D5D4D4D4D4D4D4D4D3D3D3D3D3D3D2D2D2D2D2D2D2D2D2D1D1D1D1D1D1D0D0D0D0D0CFCFCFCF
CFCFCECECECECECECDCDCDCDCCCCCCCCCCCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C8C8C8
C8C8C8C7C7C7C7C7C7C6C6C6C6C6C6C5C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C1C1
>
<
3C3C3C3B3B3B3B3C3C3B3B3B3B3C3B3B3B3B3C3A3B3B3B3B3B3A3A3B3B3B3A3A3A3B3B393A3A3A3B
3B3A3A3B3B3C3A3A3B3B3B3C3A3A3A3B3B3A3A3A3B3B3A3A3A3B3B3C3A3B3B3B3C3A3B3B3B3C3C3B
3B3B3C3C3B3B3B3C3C3B3B3B3C3C3C3B3B3C3C3C3B3B3B3C3C3A3A3B3B3C3C3A3A3B
>
<
E4E2E0DFDDDCDAD9D7D6D4D3D1CFCECCCAC9C7C6C5C3C2C0BEBDBBBAB8B6B5B4B2B1AFAEADABA9A8
A6A5A4A2A19F9E9D9B999896959392908F8C8B898786858482817F7D7D7B797876757472706F6D6C
6A696765656362605F5E5C5B5957555553514F4E4D4B4A48464543413F3D3C3B3938
>
<
12121211111111111110101010100F0F0F0F0F0D0D0D0D0D0D0C0C0C0C0C0B0C0C0C0C0B0B0B0B0B
0B0A0A0A0A0A09090909090908080807070606060605050505050404040404040403030303030302
02020202020202010101010101010100000000000000000000000000000000000000
>
<
1E1E1E1E1E1F1F1F1F1F1F1F1F1F2020202020202020212121212121212121222222222222222222
23232323232323232424242424242424242525252525252525252626262626262626272727272727
27272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B
>
<
83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A
8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909091919191919192
92929292939393939394949494949495959595959696969696979797979797989898
>
<
4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768
696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
C1C2C2C3C3C4C4C4C5C5C5C6C6C7C7C7C8C9CACACBCBCCCCCDCDCDCECECECFCFD0D0D1D1D2D2D3D3
D4D4D5D5D6D6D6D7D7D7D8D9D9DADADBDBDDDDDDDEDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E6E6E7
E7E8E8E9E9E9E9EAEAEBEBECECEDEDEEEFEFEFF0F0F1F1F1F2F2F3F3F3F3F3F3F3
>
<
3B3D3E4042444647494B4D4E50525456585A5C5D5F61636466686A6B6D6F7072747577797A7C7D7F
8182848687898A8C8E8F9192949597999B9EA0A2A4A5A7A9AAACADAFB1B3B5B6B8BABCBDBFC1C3C4
C6C8C9CBCCCDD0D1D4D5D7D9DBDDDFE0E3E4E6E8EAECEDEFF1F3F5F6F8FAFBFDFF
>
<
38383738373738373736373836373637373637383637353637353634353534343334343334323333
323231313230313230312F30302F2F2E2E2E2C2D2C2C2D2B2C2B2B2C2B2B2A2A2B2A2A2B292A2929
2A29292828292828272828272826272827272627282627282627262728282B2B2E
>
<
00000000000000000000000000000101010101010101010102020202020302030303030304040404
0405040505050606060606070707070708080808080809090909090A090A09090A090A0B0A0B0A0B
0C0B0B0A0B0B0B0B0B0B0C0C0C0C0D0D0D0E0D0E0F0F1010101110111212131314
>
<
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
<
B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B
9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A8989888787868585848483
82828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F
>
4 %_Br
<
F3F2F1F1F0EFEEEEEDEDECEBEAE9E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD8D7D6D5D4D3D2D1D0CF
CECDCCCAC9C8C7C6C5C4C3C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1AFAEADACABAAA9A8A6A5A4A3A2A0
9F9E9D9C9A999896959492918F8E8D8B8A89878685848281807F7E7D7B7A797877757472716F6E6C
6B696866656362615F5D5C5A5857555452514F4E4D4B4A4847454442403F3D3B3A3837353332302E
2D2B292826242321201E1C1A1917151312100E0D0B0907050402000000000000000000
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFEFEFEFEFFFFFFFFFF
FFFFFEFEFFFEFEFEFEFEFDFDFDFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFAFAFAFA
FAFAFAF9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F5F6F6F6F6F6F5F5F5F5F5F5F5F5F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F0F0F0EFEFEEEE
>
<
2E2E2E2D2D2E2D2C2A2929282828292929292A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2929292726
262625252424232323232323242222222222222222222222222121211F1E1E1E1E1E1E1E1E1E1F1F
1F1F1F1D1D1D1D1E1E1E1E1F1E1E1E1E1E1B1B1B1B1C1B1C1C1C1C1D1D1D1E1D1B1B1B1B1B1B1B1B
1B1B1B1B1B1C1C191919191919191818181818181919161616161616161616161616161616131414
1414131313131313141414141112121212131313131313131314141212131314141515
>
<
14141414141413131212121111111110101010101010100E0E0E0F0F0F0F0F0F0F0F1010100F0E0E
0E0D0D0D0D0D0C0C0C0C0C0C0C0A0A0A0A0A0A0A0909090909090909080808070707070707070707
07070706060606060505050505050404040303030303030303030303030302020101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
27272727272626262626262626262525252525252525252424242424242424232323232323232323
2222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E
1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A
19191919191919191818181818181818181717171717171717171616161616161616161515151515
1515151514141414141414141313131313131313131212121212121212121111111111
>
<
6F6F6F6F6F6F6F6F7070707070707070707070707070707171717171717171717171717171717272
72727272727272727272727272737373737373737373737373737373747474747474747474747474
74747475757575757575757575757575757676767676767676767676767676767777777777777777
777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A
7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C
>
4 %_Br
[
0.000031 0.939788 0.891905 0.00058 0.92549 0.117647 0.141176 2 50 0 %_BS
%_0.000031 0.939788 0.891905 0.00058 0.92549 0.117647 0.141176 2 50 0 Bs
0.114137 0.000031 0.855528 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS
%_0.114137 0.000031 0.855528 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs
0.834409 0.234318 0.89218 0.069184 0.117647 0.513726 0.254902 2 50 40 %_BS
%_0.834409 0.234318 0.89218 0.069184 0.117647 0.513726 0.254902 2 50 40 Bs
0.75787 0.230564 0.218326 0.000031 0.168627 0.596078 0.701961 2 50 60 %_BS
%_0.75787 0.230564 0.218326 0.000031 0.168627 0.596078 0.701961 2 50 60 Bs
0.9523 0.999176 0.181704 0.079255 0.164706 0.152941 0.435294 2 50 80 %_BS
%_0.9523 0.999176 0.181704 0.079255 0.164706 0.152941 0.435294 2 50 80 Bs
0.000031 0.932036 0.082826 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS
%_0.000031 0.932036 0.082826 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F2021222324252628292A2B2C2D2E
2F303233343637383A3B3C3D3E4041424344454648494A4B4C4D4E4F5051525354555758595A5C5D
5E6061626465666768696A6B6C6D6E6F707172737476777879797A7B7C7D7E7F8081818283838485
8686878889898A8B8C8D8E8F909091929393949495969697979899999A9B9B9C9D9D9E9E9F9FA0A1
A1A2A2A3A4A4A5A6A6A7A7A8A8A9A9AAAAABABACACADADAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5
B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C3C3C4C4C4C5C5C5C6C8
C9CBCCCDCED0D1D2D3D4D5D6D8D9DADB
>
<
0000010203040505060708090A0B0C0D0E0F1011121313141516171819191A1B1C1D1E1E1F202122
23232425262728292A2B2C2D2E2F303132333435363738393A3A3B3C3D3E3F404142434445464748
494A4C4D4D4E4F505152535455565758595A5B5C5D5E5F5F60616263646566676868696A6B6B6C6D
6E6E6F7070717273747475767778797A7A7B7C7C7D7E7E7F7F808181828283848485868687888989
8A8B8C8C8D8E8E8F8F909091929293949495959696979898999A9A9A9B9C9C9D9D9E9E9FA0A0A1A1
A2A2A3A3A4A5A5A6A6A7A8A8A9A9AAABABACADAEAEAFB0B1B2B2B3B4B5B5B6B6B7B7B8B9B9BABBBD
BFC1C3C5C7C8CACBCDCFD0D2D4D5D7D9
>
<
0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1B1B1C1D1E1F2020
2122232425262728292A2B2C2D2D2E2F2F3031323233343536373738393A3B3C3D3D3E3F40414243
4445464748494A4B4C4D4E4E4F50515253545455565758595A5B5B5C5D5E5E5F6061616263636465
6666676868696A6A6B6B6C6D6E6F707171727373747575767677787879797A7B7B7C7D7D7E7E7F80
808181828383848585868687878889898A8B8B8C8C8D8E8E8F8F9090919192929394949595969697
989899999A9B9B9C9C9D9D9E9E9FA0A0A1A2A2A3A3A4A5A5A6A7A8A8A9AAABABABACACADAEAEB0B2
B3B5B6B8B9BBBCBEBFC1C2C4C5C7C8C9
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000101010101020202030304040505060607070809090A0A
0B0C0D0E0F1010111213151618191A1B1C1D1E20212223242627282A2B2D2E303133343637393A3C
3D3F41434446484A4C4D4F51535557595B5D5F61636567696B6D6E6F717375787A7C7E818385878A
8C8E909395979A9C9FA1A3A6A8AAADAFB2B4B7B9BBBEC0C2C5C7CACCCED0D2D4D5D7D8DADCDEE0E2
E4E6E8EAECEEEFF1F3F4F6F8FAFCFDFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.860075 0.849699 0.789548 1 0 0 0 2 50 100 %_BS
%_0.860075 0.849699 0.789548 1 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000101010101010202020202030303030304040404050504040404050505060606
06070707070708080808080909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E
0E0E0F0F0F0F101010111111110F0F10101010101011111111121212121212121313131313131313
141414141414141415151515151515151515151616161616161616161616161616161616
>
<
D9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C7C6C5C4C3C2C1C0BFBEBCBBBABAB9B9B8B7B6B5
B4B3B3B2B1AFAEADACACABAAA9A8A6A5A5A4A3A2A1A19F9E9D9C9C9B999897979695939392918F8F
8E8D8B8B8A8988888785858483838180807F7E7C7C7B7B7A787877757574727270706F6E6E6C6C6B
6A6A686866666563636262616160605E5E5D5D5C5C5A5A58585757575555545452525250504F4F4F
4E4E4C4C4C4A4A4A49494949474747464646464444444444434343434343414141414141
>
<
E5E5E5E5E4E4E4E4E3E3E3E3E4E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7
E7E7E7E7E7E7E7E7E8E8E8E8E8E9E9E9E9E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEAEAE9E9
E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7
E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
>
<
42434445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F606161626364656667
6869696A6B6C6D6E6F6F7071727374757576777879797A7B7C7D7D7E7F8081818283848485868787
88898A8A8B8C8D8D8E8F8F9091919293939495969697979899999A9B9B9C9D9D9E9E9FA0A0A1A1A2
A3A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B0B1B1B2B2B3B3B3B4B4B5B5B5
B6B6B7B7B7B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBE
>
<
24242424242424242424242424242424242424242424242424242424242424242424242424242424
24242424242424242424242424242424242424242424242424242424242423232323232323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
232323232323232323232323232323232323232323232323232323232323232323232323
>
4 %_Br
<
1D1D1C1C1B1B1A1A1919181919191918181817171616161515151514141414141515151414141313
13121212111111111010100F0F10100F0E0E0E0D0D0D0C0C0C0B0B0A0A09090909080A0909090908
08080807070706060505050404040505050504040303030202010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
<
0000000000020406080A0C0D0E1012141517191B1D1F2022242628292B2D2F3031333537383A3C3D
3F404243454648494B4C4E4F5152535556585A5B5D5E606162646567686A6B6C6E6F707173757678
797B7C7D7F80818284858687888A8B8C8D8F90919294959697999A9B9C9D9FA0A1A2A3A4A6A7A8A9
AAABACADAEB0B1B2B3B4B5B6B7B8B9B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2
D3D4D5D5D6D7D8D9
>
<
DADBDCDDDEDEDFDFE0E0E0E0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E2E2E2E2E3E3E3E3E3E3E3E3E3
E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E7E7
E7E7E7E7E7E7E7E7E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7
E6E6E6E6E6E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E5E5E4E4E4E3E3E4E4E4E4E4E3E3E3E3E2E3E3E3
E4E4E4E4E5E5E5E5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
<
F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECEC
ECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEA
EAEAEAEAEAEAEAEA
>
<
E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2
C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
4948474645444342
>
<
28282828282828282828282828282828282828282827272727272727272727272727272727272727
27272727272727272727272727272727272727272727272626262626262626262626262626262626
26262626262626262626262626262626262626262626262626252525252525252525252525252525
25252525252525252525252525252525252525252525252525252524242424242424242424242424
2424242424242424
>
4 %_Br
<
25252524252525262424242525232324242423232324242222232222232121212222212121212221
2121212120202121212020212121202020212120202020211F202020201F1F202020201F1F1F2020
1F1F1F1F1F1E1E1E1F1F1E1E1F1F1F1E1E1E1E1E1D1D1D1D1D1C1C1D1D1D1C1C1D1D1D1C1C1C1C1C
1C1B1B1C1C1C1C1C1C1D1D1C1C1D1D1D1C1C1D
>
<
8B8A8A8987878685858482828180807E7D7D7B7A7A7877777575737271706F6F6D6B6C6A69696766
666462626160605E5C5D5B59595756565453525150504E4C4D4B494947464645444341413F3E3E3C
3B3B3937373634343230312F2D2D2B2A2A282626252322211F1F1D1B1B1918181614141313110F0F
0D0C0C0A080807050503010200000000000000
>
<
0F1214171B1D2125272A2D2E3235373A3D3F4245474A4D4E51525457585B5D5F616465686A6C6E70
717476787A7C7E8082838587888A8B8D8F9192949697989A9B9D9E9FA1A2A4A5A7A9AAABADAEAFB0
B1B2B3B5B6B8B9BABABBBCBEBFC0C2C2C3C3C4C5C6C8C8C9CACBCCCDCECFCFD0D1D1D2D3D3D4D5D5
D6D6D7D7D8D9D9D9DADADADBDADADBDADADADA
>
0.000031
<
D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDF
DFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5E5E5E5E5E5E6E6E6E6E6
E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEE
EEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2
>
<
8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8
A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2
C3C3C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADADBDCDC
DDDEDEDFE0E0E1E2E2E3E4E4E5E6E6E7E8E8E9
>
<
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
3A393837363534333231302F2E2D2C2B2A2928
>
4 %_Br
<
BFBFBEBEBEBEBDBDBDBCBCBCBBBBBBBABABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B2B2B1B1B0
AFAFAEAEAEADACACABABAAA9A9A8A7A7A6A5A5A4A3A3A2A1A1A09F9E9E9D9C9B9B9A999898979695
9494939291908F8E8D8C8B8B8A898887868584838281807F7E7D7C7B797978777675747271706F6E
6D6C6B6A69686665646362605F5E5D5C5A59585655545351504F4D4C4B49484746444342403E3D3C
3A383735343331302E2D2B29282625
>
<
2A2A2A2A2B2D2D2E2E2E2E2F2F2F303232333333343434353537373838383839393A3C3C3D3D3D3E
3E3F3F3F42424243434444454545484849494A4A4B4B4B4E4E4F4F50505051515254545555555656
5757585A5A5B5B5C5C5D5D5D606061616262626363646666676768686869696A6B6C6C6D6D6E6E6F
6F717172727273737374747677777778787979797A7C7C7C7D7D7E7E7E7F81818182828283838384
858686868787878788888A8A8B8B8B
>
<
3E3D3D3D3D3C3C3C3C3C3C3C3C3C3B3A3A3A3A3A3A3A3A3939383838383839393939383838383737
373737373635353535353434343432323232323232313130303030302F2F2F2F2F2E2D2D2D2D2D2D
2C2C2C2B2A2A2A2A2B2B2B2B29292929292828282827262525252525252524242323222222222221
2120201F1F1F1F1F1F1E1E1D1C1C1C1B1B1B1B1A1A19181818171919191817171616161515151514
131212121212121211110F0F0F0F0F
>
0.000031
<
292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8
C9CACBCCCDCECFD0D1D2D3D4D5D6D7
>
<
A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C
9C9C9C9C9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9999999999999999999998989898989898
98989897979797979797979796969696969696969696959595959595959595959494949494949494
94939393939393939393939292929292929292929291919191919191919190909090909090909090
8F8F8F8F8F8F8F8F8F8F8E8E8E8E8E
>
<
B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4
B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4
B4B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
>
4 %_Br
[
0.087465 0.256168 0.903777 0.000031 0.929412 0.745098 0.137255 2 50 100 %_BS
%_0.087465 0.256168 0.903777 0.000031 0.929412 0.745098 0.137255 2 50 100 Bs
0.000031 0.849943 0.89926 0.000183 0.917647 0.258824 0.141176 2 35.5263 79.7753 %_BS
%_0.000031 0.849943 0.89926 0.000183 0.917647 0.258824 0.141176 2 35.5263 79.7753 Bs
0.114137 0.000031 0.855528 0.000031 0.94902 0.913725 0.156863 2 50 55.618 %_BS
%_0.114137 0.000031 0.855528 0.000031 0.94902 0.913725 0.156863 2 50 55.618 Bs
0.144991 0.545708 0.056977 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 %_BS
%_0.144991 0.545708 0.056977 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 Bs
0.74905 0.163821 0.241306 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 %_BS
%_0.74905 0.163821 0.241306 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
C5C6C6C7C7C8C9C9CACACBCCCCCDCDCECECECFCFD0D0D0D1D1D1D2D2D2D3D3D4D4D4D4D5D5D5D5D5
D6D6D6D6D6D7D7D7D7D7D7D8D8D8D8D8D8D8D7D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9
D9D8D9D9D9D9D8D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D5D5D6D5D5D5D4D4D4D3D3D2D1D1
>
<
000000000000000000010305080A0C0F111315171A1C1E2022242628292B2D2E3031333436373839
3B3C3D3E4041424344454748494A4B4D4E4F4F515253545556565758595A5B5C5D5E5E5F60616263
646565666768696A6A6B6C6D6D6E6F7071727373747576777878797A7B7C7D7E7F80818283
>
<
DCDCDDDDDFDFE0E0E0E2E2E3E3E3E4E4E5E5E6E6E6E7E7E8E8E9E9E9EBEBECECEDECECEDEDEEEDED
EEEEEFEFF0F0F0F1F1F2F1F3F2F1F3F2F3F2F2F2F2F3F3F4F4F3F5F4F5F5F6F5F4F6F5F6F5F7F6F5
F6F5F7F7F6F8F7F9F7F9F7F5F6F4F6F4F6F4F3F4F3F4F3F5F4F3F5F3F5F3F1F3F1F2F0F1F0
>
<
000000000000000000000000000000000000000101010202020303040506070809090A0B0C0E0F10
111214151617191A1C1D1F2022232527292A2C2F31333536383A3C3E4042434547494B4D4F515355
57595B5E60626466686A6C6E6F71737577797B7E80828486888A8C8E91939597999B9EA0A2
>
<
1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919191919
>
<
ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584
838281807F7E7D7C7B7A7978777675747372716F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
>
<
4B4B4A4A4949484848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3B
3A3A3939383838373736363535353434333333323231313030302F2F2E2E2D2D2D2C2C2B2B2A2A2A
29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1D1C1C1B1B1A1A
>
4 %_Br
[
0.819608 0.511986 0.940978 0.63476 0.098039 0.211765 0.101961 2 50 98.3146 %_BS
%_0.819608 0.511986 0.940978 0.63476 0.098039 0.211765 0.101961 2 50 98.3146 Bs
0.772 0.000031 0.862119 0.000031 0.117647 0.670588 0.294118 2 50 0 %_BS
%_0.772 0.000031 0.862119 0.000031 0.117647 0.670588 0.294118 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Vi\761eta negra suave)
(Vi\761eta negra suave) 1 3 Bd
[
0.759945
0.785977
0.691737
0.90106
0.07451
0.047059
0.054902
4 %_Br
0.759945
0.785977
0.691737
0.90106
0.07451
0.047059
0.054902
4 %_Br
[
0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS
%_0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs
0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS
%_0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs
0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Motivo de pez)
(Motivo de pez) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 Xa
 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 Xa
 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 Xa
 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 Xa
 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 Xa
 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 Xa
 0.000031 0.701869 0.906279 0.000031 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa
 0.000031 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa
 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 Xa
 0.927703 0.816953 0.000031 0.000031 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4068.5 4568.4351 m
-3854.8999 4568.4351 L
-3854.8999 4560.6343 L
-4068.5 4560.6343 L
-4068.5 4568.4351 L
n
0 O
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa
-4068.5 4564.5352 m
-4058.4856 4567.0269 -4051.6863 4568.375 -4039.7007 4568.4351 c
-4026.7185 4568.5 -3961.6997 4568.4351 y
-3896.6816 4568.5 -3883.6997 4568.4351 v
-3871.7124 4568.375 -3864.9136 4567.0269 -3854.8999 4564.5352 C
-3864.9136 4562.0435 -3871.7124 4560.6953 -3883.6997 4560.6343 c
-3896.6816 4560.5688 -3961.6997 4560.6343 y
-4026.7185 4560.5688 -4039.7007 4560.6343 v
-4051.6863 4560.6953 -4058.4856 4562.0435 -4068.5 4564.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7941 8441 m
-7843.2451 8441 L
-7843.2451 8420.2842 L
-7941 8420.2842 L
-7941 8441 L
n
0 O
0 g
1 XR
-7843.5586 8436.3184 m
-7858.8247 8422.5303 -7876.5537 8443.4492 -7891.9277 8431.166 C
-7890.4199 8425.5137 -7884.7598 8432.4678 -7882.5176 8427.8213 C
-7882.4341 8426.2207 -7885.6313 8427.7207 -7885.5127 8425.6006 C
-7883.6245 8422.1914 -7878.8955 8422.6885 -7877.5664 8426.7373 C
-7871.3115 8424.7676 -7864.7734 8418.8242 -7858.7847 8420.6172 C
-7857.2671 8421.9678 -7858.0708 8423.1514 -7857.6211 8424.4277 C
-7850.2871 8419.9922 -7841.4644 8429.1279 -7843.5586 8436.3184 C
f
-7887.2842 8437.9326 m
-7887.8247 8438.3086 -7886.9277 8439.4199 -7887.2529 8439.9082 C
-7889.3237 8439.1563 -7891.6919 8435.0781 -7893.4731 8432.3105 C
-7893.2632 8433.8398 -7894.6641 8435.1641 -7896.0781 8432.9326 C
-7896.2383 8432.1152 -7895.3667 8431.8281 -7895.6729 8430.9365 C
-7896.8306 8429.3682 -7897.8472 8430.8535 -7898.7798 8430.625 C
-7899.3184 8429.8613 -7899.6143 8429.2188 -7899.6816 8428.6943 C
-7893.5537 8425.874 -7886.9263 8437.6768 -7880.7456 8438.1025 C
-7880.9048 8441.1152 -7884.8555 8442.8008 -7887.2842 8437.9326 C
f
u
u
0 XR
-7884.1602 8432.6602 m
-7899.0142 8426.1201 -7920.4731 8430.3418 -7936.3687 8430.3193 c
-7942.2988 8430.3125 -7931.8965 8430.3213 -7937.8267 8430.3262 c
N
0 O
0 g
-7881.8052 8431.4395 m
-7899.1475 8424.2637 -7918.9341 8429.0557 -7937.0532 8428.9863 C
-7937.8608 8429.873 -7938.6685 8430.7617 -7939.4751 8431.6475 C
-7938.6973 8431.6475 -7937.9194 8431.6465 -7937.1421 8431.6533 C
-7936.3345 8430.7656 -7935.5273 8429.8789 -7934.7202 8428.9922 C
-7935.3516 8429.002 -7935.9844 8428.9951 -7936.6157 8428.9951 c
-7938.3735 8428.998 -7942.9165 8431.6621 -7939.0376 8431.6572 c
-7938.4063 8431.6572 -7937.7734 8431.6641 -7937.1421 8431.6533 c
-7935.4155 8431.626 -7930.8184 8429.0234 -7934.7202 8428.9922 c
-7935.4976 8428.9834 -7936.2759 8428.9863 -7937.0532 8428.9863 c
-7938.8081 8428.9854 -7943.3574 8431.6328 -7939.4751 8431.6475 c
-7922.1177 8431.7148 -7903.1025 8427.0137 -7886.5151 8433.8789 c
-7885.1035 8434.4639 -7879.8081 8432.2666 -7881.8052 8431.4395 c
-7881.8052 8431.4395 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7941 8441 m
-7929.0078 8441 L
-7929.0078 8430.3633 L
-7941 8430.3633 L
-7941 8441 L
n
-7940.3218 8430.3633 m
-7940.3218 8434.3125 L
-7940.3218 8435.3477 L
-7940.3218 8435.9863 L
-7940.3218 8437.085 L
-7940.3218 8441 L
-7929.6865 8441 L
-7929.6865 8437.085 L
-7929.6865 8435.9863 L
-7929.6865 8435.3477 L
-7929.6865 8434.3125 L
-7929.6865 8430.3633 L
-7940.3218 8430.3633 L
n
u
0 O
0.860075 0.849699 0.789548 1 0 0 0 Xa
-7929.0078 8437.085 m
-7929.0078 8436.4395 L
-7941 8436.4414 L
-7941 8437.085 L
-7941 8437.1504 L
-7929.0078 8437.1494 L
-7929.0078 8437.085 L
f
-7929.0078 8434.3125 m
-7941 8434.3125 L
-7941 8435.0215 L
-7929.0078 8435.0215 L
-7929.0078 8434.3125 L
f
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
-7929.0078 8436.0518 m
-7941 8436.0518 L
-7941 8436.4414 L
-7929.0078 8436.4395 L
-7929.0078 8436.0518 L
f
-7929.0078 8435.3477 m
-7929.0078 8435.0215 L
-7941 8435.0215 L
-7941 8435.3477 L
-7941 8435.4121 L
-7929.0078 8435.4121 L
-7929.0078 8435.3477 L
f
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
-7929.0078 8435.9863 m
-7929.0078 8435.4121 L
-7941 8435.4121 L
-7941 8435.9863 L
-7941 8436.0518 L
-7929.0078 8436.0518 L
-7929.0078 8435.9863 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7941 8439.8047 m
-7930.3638 8439.8047 L
-7930.3638 8429.168 L
-7941 8429.168 L
-7941 8439.8047 L
n
-7941 8429.168 m
-7941 8433.0586 L
-7941 8433.7686 L
-7941 8434.1514 L
-7941 8434.793 L
-7941 8435.1816 L
-7941 8435.8906 L
-7941 8439.8047 L
-7930.3638 8439.8047 L
-7930.3638 8429.168 L
-7941 8429.168 L
n
u
0 O
0.860075 0.849699 0.789548 1 0 0 0 Xa
-7934.9585 8441 m
-7934.2515 8441 L
-7934.2607 8435.9561 L
-7928.5229 8435.9551 L
-7928.5229 8435.2441 L
-7934.9707 8435.2471 L
-7934.9585 8441 L
f
-7936.6055 8433.5342 m
-7936.8696 8433.7969 -7937.0215 8434.1631 -7937.0215 8434.5361 C
-7937.0073 8441 L
-7936.2979 8441 L
-7936.3125 8434.5361 L
-7936.3125 8434.3496 -7936.2363 8434.168 -7936.1045 8434.0352 c
-7935.9717 8433.9033 -7935.7891 8433.8281 -7935.6021 8433.8281 C
-7928.5229 8433.8281 L
-7928.5229 8433.1182 L
-7935.6021 8433.1182 L
-7935.9761 8433.1182 -7936.3418 8433.2695 -7936.6055 8433.5342 c
f
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
-7935.2827 8441 m
-7934.9585 8441 L
-7934.9707 8435.2471 L
-7928.5229 8435.2441 L
-7928.5229 8434.8555 L
-7935.2827 8434.8555 L
-7935.2827 8441 L
f
-7936.1045 8434.0352 m
-7936.2363 8434.168 -7936.3125 8434.3496 -7936.3125 8434.5361 C
-7936.2979 8441 L
-7935.9219 8441 L
-7935.9219 8434.5361 L
-7935.9219 8434.4521 -7935.8877 8434.3711 -7935.8281 8434.3105 c
-7935.7695 8434.252 -7935.6865 8434.2188 -7935.6025 8434.2188 C
-7928.5229 8434.2188 L
-7928.5229 8433.8281 L
-7935.6021 8433.8281 L
-7935.7891 8433.8281 -7935.9717 8433.9033 -7936.1045 8434.0352 c
f
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
-7935.8281 8434.3105 m
-7935.8877 8434.3711 -7935.9219 8434.4521 -7935.9219 8434.5361 C
-7935.9219 8441 L
-7935.2827 8441 L
-7935.2827 8434.8555 L
-7928.5229 8434.8555 L
-7928.5229 8434.2188 L
-7935.6025 8434.2188 L
-7935.6865 8434.2188 -7935.7695 8434.252 -7935.8281 8434.3105 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7941 8441 m
-7929.0078 8441 L
-7929.0078 8430.3633 L
-7941 8430.3633 L
-7941 8441 L
n
-7940.0117 8430.3633 m
-7940.0117 8434.3125 L
-7940.0117 8435.3477 L
-7940.0117 8435.9863 L
-7940.0117 8437.085 L
-7940.0117 8441 L
-7929.3765 8441 L
-7929.3765 8437.085 L
-7929.3765 8435.9863 L
-7929.3765 8435.3477 L
-7929.3765 8434.3125 L
-7929.3765 8430.3633 L
-7940.0117 8430.3633 L
n
0 O
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
-7929.0078 8436.0518 m
-7941 8436.0518 L
-7941 8436.4414 L
-7929.0078 8436.4395 L
-7929.0078 8436.0518 L
f
-7929.0078 8435.3477 m
-7929.0078 8435.0215 L
-7941 8435.0215 L
-7941 8435.3477 L
-7941 8435.4121 L
-7929.0078 8435.4121 L
-7929.0078 8435.3477 L
f
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
-7929.0078 8435.9863 m
-7929.0078 8435.4121 L
-7941 8435.4121 L
-7941 8435.9863 L
-7941 8436.0518 L
-7929.0078 8436.0518 L
-7929.0078 8435.9863 L
f
1 Ap
0.860075 0.849699 0.789548 1 0 0 0 Xa
-7939.2715 8437.1504 m
-7941 8437.1504 L
-7941 8434.3125 L
-7939.2715 8434.3125 L
-7939.2715 8437.1504 L
f
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
-7938.5967 8437.1338 m
-7939.4492 8437.1338 L
-7939.4492 8434.2969 L
-7938.5967 8434.2969 L
-7938.5967 8437.1338 L
f
0 Ap
0.860075 0.849699 0.789548 1 0 0 0 Xa
-7929.0078 8437.085 m
-7929.0078 8436.4395 L
-7941 8436.4414 L
-7941 8437.085 L
-7941 8437.1504 L
-7929.0078 8437.1494 L
-7929.0078 8437.085 L
f
-7929.0078 8434.3125 m
-7941 8434.3125 L
-7941 8435.0215 L
-7929.0078 8435.0215 L
-7929.0078 8434.3125 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7941 8441 m
-7929.6099 8441 L
-7929.6099 8430.3633 L
-7941 8430.3633 L
-7941 8441 L
n
-7940.2461 8437.085 m
-7940.2461 8441 L
-7929.6099 8441 L
-7929.6099 8430.3633 L
-7940.2461 8430.3633 L
-7940.2461 8434.2549 L
-7940.2461 8437.085 L
n
u
0 O
0.860075 0.849699 0.789548 1 0 0 0 Xa
-7934.6245 8437.0215 m
-7934.6245 8436.377 L
-7941 8436.377 L
-7941 8437.0215 L
-7941 8437.085 L
-7934.6245 8437.085 L
-7934.6245 8437.0215 L
f
-7934.6245 8434.248 m
-7941 8434.248 L
-7941 8434.958 L
-7934.6245 8434.958 L
-7934.6245 8434.248 L
f
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
-7934.6245 8435.9863 m
-7941 8435.9863 L
-7941 8436.377 L
-7934.6245 8436.377 L
-7934.6245 8435.9863 L
f
-7934.6245 8435.2832 m
-7934.6245 8434.958 L
-7941 8434.958 L
-7941 8435.2832 L
-7941 8435.3486 L
-7934.6245 8435.3486 L
-7934.6245 8435.2832 L
f
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
-7934.6245 8435.9209 m
-7934.6245 8435.3486 L
-7941 8435.3486 L
-7941 8435.9209 L
-7941 8435.9863 L
-7934.6245 8435.9863 L
-7934.6245 8435.9209 L
f
U
-7940.2461 8441 m
-7929.6099 8441 L
-7929.6099 8430.3633 L
-7940.2461 8430.3633 L
-7940.2461 8441 L
n
-7929.7241 8435.6816 m
-7937.8125 8440.3516 L
N
0 O
0.860075 0.849699 0.789548 1 0 0 0 Xa
-7937.4814 8434.96 m
-7937.4814 8432.1406 L
-7931.3535 8435.6777 L
-7937.4814 8439.2158 L
-7937.4814 8436.377 L
-7937.8125 8436.377 L
-7937.8125 8437.085 L
-7937.8125 8440.3516 L
-7929.7241 8435.6816 L
-7937.8125 8431.0127 L
-7937.8125 8434.251 L
-7937.8125 8434.96 L
-7937.4814 8434.96 L
f
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
-7937.4814 8439.2158 m
-7931.3535 8435.6777 L
-7937.4814 8432.1406 L
-7937.4814 8434.96 L
-7937.4814 8435.3477 L
-7937.3472 8435.3477 L
-7937.2148 8434.9756 -7936.8633 8434.707 -7936.4453 8434.707 c
-7935.9155 8434.707 -7935.4849 8435.1367 -7935.4849 8435.667 c
-7935.4849 8436.1973 -7935.9155 8436.627 -7936.4453 8436.627 c
-7936.8633 8436.627 -7937.2148 8436.3594 -7937.3472 8435.9863 C
-7937.4814 8435.9863 L
-7937.4814 8436.377 L
-7937.4814 8439.2158 L
f
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
-7936.4453 8436.627 m
-7935.9155 8436.627 -7935.4849 8436.1973 -7935.4849 8435.667 c
-7935.4849 8435.1367 -7935.9155 8434.707 -7936.4453 8434.707 c
-7936.8633 8434.707 -7937.2148 8434.9756 -7937.3472 8435.3477 c
-7937.3828 8435.4473 -7937.4058 8435.5537 -7937.4058 8435.667 c
-7937.4058 8435.7793 -7937.3828 8435.8848 -7937.3472 8435.9863 c
-7937.2148 8436.3594 -7936.8633 8436.627 -7936.4453 8436.627 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7940.8833 8440.9551 m
-7849.0479 8440.9551 L
-7849.0479 8436.6758 L
-7940.8833 8436.6758 L
-7940.8833 8440.9551 L
n
0 O
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa
-7940.6631 8438.2754 m
-7941 8438.3418 -7940.4814 8438.5313 -7940.8833 8438.3887 C
-7940.8379 8438.2705 -7940.7725 8438.1816 -7940.6631 8438.2754 C
f
-7850.1675 8438.4414 m
-7851.2524 8439.2041 -7852.6816 8438.4336 -7853.8701 8438.9199 C
-7854.0098 8438.9521 -7853.8345 8438.502 -7854.1484 8438.6025 C
-7855.3008 8439.1953 -7857.1162 8438.8418 -7858.5195 8438.3848 C
-7858.4346 8438.2666 L
-7858.7017 8438.1816 -7859.0283 8438.5723 -7859.3115 8438.5176 C
-7859.3135 8438.4395 -7859.2207 8438.4063 -7859.2861 8438.2988 C
-7859.3574 8438.5352 -7859.7983 8438.4082 -7859.9185 8438.584 C
-7860.0303 8438.4922 -7860.0195 8438.3047 -7860.1641 8438.2012 C
-7860.3262 8438.4697 L
-7860.7769 8439.1094 -7861.4209 8438.4258 -7862.0361 8438.7559 C
-7862.0063 8438.6934 -7861.9453 8438.6445 -7861.9941 8438.584 C
-7862.9814 8438.9727 -7864.2168 8438.9004 -7865.3208 8439.043 C
-7865.2769 8438.9482 -7865.2363 8438.7754 -7865.3008 8438.668 C
-7865.3555 8438.9512 -7865.6963 8439.0225 -7865.9922 8439.0781 C
-7866.1255 8438.7871 -7866.4995 8439.3438 -7866.8467 8439.1836 C
-7866.8169 8439.1191 L
-7867.0732 8439.4238 -7867.1973 8438.9434 -7867.4053 8439.3086 C
-7867.5684 8439.0801 L
-7867.6807 8439.4902 -7867.9395 8438.8672 -7868.1514 8439.0762 C
-7868.1445 8439.1602 L
-7868.3442 8439.2598 -7868.4482 8439.0537 -7868.6338 8439.123 C
-7868.6514 8439.0762 L
-7869.0854 8439.1836 -7869.3379 8438.9551 -7869.3271 8439.2754 C
-7869.4795 8439.0186 -7868.9063 8439.1582 -7869.1455 8438.7852 C
-7870.5732 8439.1152 -7872.0459 8439.0508 -7873.4834 8439.0566 C
-7873.6465 8438.9277 -7873.7505 8438.8887 -7873.7871 8438.7676 C
-7873.9307 8438.832 -7874.3281 8438.8262 -7874.4585 8438.9902 C
-7874.4102 8438.9834 -7874.5513 8438.8262 -7874.6274 8438.8105 C
-7874.8887 8438.6895 -7874.9131 8439.1621 -7875.2002 8439.0186 C
-7875.0859 8438.9336 -7875.0469 8438.8301 -7875.0854 8438.7109 C
-7875.3301 8438.9609 -7875.6577 8438.9209 -7875.9473 8439.002 C
-7875.9023 8438.9482 -7875.8325 8438.916 -7875.8433 8438.8154 C
-7876.1602 8439.0986 -7876.4209 8438.7559 -7876.6982 8438.9346 C
-7876.5947 8438.75 L
-7877.0415 8438.5254 -7876.7266 8439.1367 -7877.1128 8439.0039 C
-7877.02 8438.9453 -7877.0527 8438.873 -7877.0361 8438.7979 C
-7877.3965 8439.1338 -7877.9795 8439.0225 -7878.3389 8439.1367 C
-7878.3174 8439.1113 -7878.3232 8439.0605 Y
-7878.7148 8439.1025 -7879.1245 8438.998 -7879.5552 8439.1445 C
-7879.7119 8439.0625 -7879.5039 8438.6934 -7879.9185 8438.7617 C
-7879.9033 8439.1328 -7880.6221 8438.9141 -7880.3779 8439.334 C
-7880.7319 8439.2734 -7881.2925 8439.1338 -7881.5283 8439.2598 C
-7881.3691 8439.1191 -7881.7007 8438.8066 -7881.4063 8438.7754 C
-7881.6289 8438.5498 L
-7881.5957 8438.3984 -7881.3999 8438.6016 -7881.4707 8438.4102 C
-7881.6182 8438.4258 -7882.0479 8438.5723 -7882.1797 8438.5117 C
-7882.4531 8438.7393 -7882.7041 8439.1641 -7883.1465 8439.2109 C
-7882.9385 8439.0664 -7883.2646 8438.8018 -7883.1235 8438.7383 C
-7883.7407 8439.4492 L
-7883.8877 8439.4668 -7883.7725 8439.1563 -7883.9854 8439.2529 C
-7883.9746 8439.3516 -7884.0674 8439.4121 -7884.1318 8439.4922 C
-7884.1875 8439.4492 -7884.7441 8439.584 -7884.8081 8439.2188 C
-7884.8735 8439.0762 -7884.5684 8439.1426 -7884.7314 8439.0117 C
-7885.0029 8439.0156 -7885.0151 8439.1406 -7885.2871 8439.1465 C
-7885.2925 8439.0977 L
-7885.4717 8439.043 -7885.8213 8439.2529 -7885.6265 8439.4551 C
-7885.5015 8439.4668 -7885.6738 8439.2354 -7885.4888 8439.3418 C
-7885.6152 8439.5537 -7885.9312 8439.6133 -7886.2031 8439.6172 C
-7886.1104 8439.5586 -7886.1216 8439.4609 -7886.0845 8439.3574 C
-7886.4497 8439.6445 -7886.8369 8439.7354 -7887.2451 8439.8555 C
-7887.2515 8440.0293 -7887.0928 8439.5391 -7887.0327 8439.6309 C
-7887.5557 8439.3896 -7888.1128 8439.9727 -7888.5479 8439.6201 C
-7888.4766 8439.5898 -7888.5098 8439.8672 -7888.5146 8439.8184 C
-7888.7666 8439.7969 -7888.7549 8439.5449 -7888.9189 8439.6377 C
-7888.9355 8439.4902 -7889.1255 8439.6855 -7889.2944 8439.7305 C
-7889.3818 8439.8369 -7889.3384 8439.6582 -7889.1914 8439.6426 C
-7889.4268 8439.7676 -7890.3691 8439.9941 -7890.9131 8439.7793 C
-7890.9023 8439.877 -7891.2471 8440.1377 -7891.3721 8440.127 C
-7891.3232 8439.8984 L
-7891.4375 8439.7617 -7891.7422 8439.918 -7891.7632 8439.7227 C
-7892.0303 8440 -7890.7344 8439.4863 -7891.0957 8439.7002 C
-7891.1895 8439.5098 -7891.5991 8440.0645 -7891.5215 8439.7529 C
-7891.7725 8439.7617 -7892.0161 8440.0186 -7892.2559 8439.8047 C
-7892.1865 8439.8418 -7892.0522 8439.4873 -7892.2549 8439.5039 C
-7892.6123 8439.5449 -7892.3564 8439.6133 -7892.6465 8439.6895 C
-7892.8281 8439.7832 L
-7892.8398 8440.0059 -7893.1475 8439.7529 -7893.0146 8440.002 C
-7893.0586 8439.8184 -7893.5337 8440.1152 -7893.4971 8439.7461 C
-7893.4473 8439.4551 L
-7893.6016 8439.4766 -7893.7002 8439.7617 -7893.8213 8439.8896 C
-7893.8418 8439.8633 -7893.8823 8439.8047 -7893.8745 8439.7578 C
-7893.8994 8440.2031 -7894.2432 8439.7207 -7894.4268 8440.0645 C
-7894.7505 8439.9102 -7895.2495 8440.0508 -7895.4023 8439.7734 C
-7895.6514 8439.9082 -7895.8784 8440.0684 -7896.1621 8439.9727 C
-7896.1055 8439.9307 -7896.0283 8439.918 -7896.0122 8439.8223 C
-7896.1904 8439.6914 -7896.2344 8439.8086 -7896.3975 8439.8809 C
-7896.3608 8439.8145 -7896.7539 8439.6201 -7896.9521 8439.4629 C
-7897.1992 8439.5957 -7897.1143 8439.8359 -7897.1392 8439.9824 C
-7897.3652 8439.543 -7897.8379 8440.2656 -7898.1211 8439.8672 C
-7898.0352 8439.8066 -7897.7598 8439.6514 -7897.9658 8439.541 C
-7898.1919 8439.1025 -7898.4219 8439.8652 -7898.7861 8439.6543 C
-7898.6968 8440.0186 L
-7898.8594 8439.793 -7899.2334 8440.2305 -7899.1963 8439.8594 C
-7899.3184 8439.9902 -7899.6265 8439.7383 -7899.5859 8440.0938 C
-7900.1846 8439.793 -7901.0425 8440.2754 -7901.4102 8439.6377 C
-7901.4961 8439.6973 -7901.7104 8439.6367 -7901.6665 8439.8193 C
-7901.5239 8440.0176 -7901.4673 8439.6777 -7901.4141 8439.8125 C
-7901.4912 8439.8232 -7901.5078 8439.9209 -7901.5161 8439.9697 C
-7901.7021 8439.8887 -7901.8486 8439.8633 -7901.6729 8439.5674 C
-7902.0869 8439.3477 -7902.1001 8440.1719 -7902.6274 8440.0332 C
-7902.6035 8439.8857 -7902.6436 8439.8301 -7902.7979 8439.8535 C
-7903.0903 8440.1055 L
-7903.4312 8440.0469 -7903.2842 8439.7705 -7903.2925 8439.5215 C
-7903.4746 8439.5645 -7903.6973 8439.5527 -7903.7803 8439.7383 C
-7904.0015 8439.4258 L
-7903.8398 8439.6514 -7904.1514 8439.5762 -7904.2368 8439.6367 C
-7904.1514 8439.5762 L
-7904.1846 8439.4697 -7904.3955 8439.5352 -7904.5024 8439.5664 C
-7904.4766 8439.7207 -7904.2617 8439.7832 -7904.1445 8439.8281 C
-7904.2373 8439.9375 -7904.3823 8439.9121 -7904.5059 8440.041 C
-7904.4648 8439.7969 -7904.8027 8439.8672 -7904.9473 8439.8418 C
-7905.1133 8439.7891 -7905.1348 8440.0605 -7905.1831 8440.0527 C
-7905.1875 8439.9258 -7905.4541 8440.0313 -7905.3247 8439.8535 C
-7905.2681 8439.8125 -7905.1953 8439.9766 -7905.1016 8439.8652 C
-7905.2109 8439.7705 -7905.1982 8439.5498 -7905.4258 8439.7109 C
-7905.5967 8439.832 -7905.3818 8440.1934 -7905.7061 8440.0391 C
-7905.6211 8439.9785 -7905.6055 8439.8809 -7905.5391 8439.793 C
-7905.8433 8439.666 L
-7905.8564 8439.8887 L
-7905.8975 8439.832 -7905.8691 8439.8125 -7905.8877 8439.7832 C
-7905.9785 8440.0176 -7906.3521 8439.8555 -7906.4209 8440.1191 C
-7906.5742 8440.1426 -7906.7441 8439.9648 -7906.8906 8439.9395 C
-7906.8623 8439.9199 L
-7907.0415 8439.7891 -7907.2793 8439.875 -7907.4297 8440.0254 C
-7907.4219 8439.9766 L
-7907.5195 8439.959 -7907.7505 8439.9941 -7907.8735 8440.125 C
-7908.1201 8439.957 -7907.9561 8439.2842 -7908.2295 8439.5645 C
-7908.48 8439.5723 -7908.6221 8439.9727 -7908.5215 8440.1152 C
-7908.9717 8439.9648 -7909.4834 8440.3281 -7909.9009 8439.9824 C
-7909.9658 8440.0723 -7909.9248 8440.1289 -7910.0586 8440.1816 C
-7910.7197 8440.0938 -7911.4551 8440.4453 -7911.9814 8440.0078 C
-7911.79 8439.9141 -7911.9688 8439.7852 -7911.9727 8439.6582 C
-7912.1309 8439.8574 -7912.1631 8439.4512 -7912.2197 8439.793 C
-7912.2041 8439.9941 -7912.2197 8440.0918 -7912.0337 8440.1729 C
-7912.4282 8440.2813 -7913.0283 8440.2813 -7913.2471 8440.0938 C
-7913.1377 8440.1865 -7913.2227 8440.248 -7913.3086 8440.3086 C
-7913.2803 8439.9873 -7913.5713 8439.9395 -7913.7915 8440.0527 C
-7913.8223 8440.248 L
-7913.9658 8440.0469 L
-7914.0503 8440.1094 -7914.0591 8440.457 -7914.2773 8440.2695 C
-7914.2891 8440.1934 -7914.3018 8440.1162 -7914.3418 8440.0605 C
-7914.5693 8440.2207 -7914.8906 8440.4922 -7915.1377 8440.3262 C
-7915.3398 8440.041 L
-7915.4453 8440.0723 -7915.6235 8440.2441 -7915.4375 8440.3262 C
-7915.8594 8440.1543 -7916.1309 8440.1328 -7916.2646 8439.8857 C
-7916.9912 8440.4873 -7918.0459 8440.5117 -7918.8906 8440.4688 C
-7918.8652 8440.3223 L
-7919.0923 8440.1855 -7918.9834 8440.5781 -7919.1416 8440.4766 C
-7919.0684 8440.3369 -7919.3145 8440.1729 -7919.1362 8440.002 C
-7919.4609 8439.8477 -7919.5547 8440.2559 -7919.7656 8440.3223 C
-7919.7979 8440.5146 -7919.5957 8440.1992 -7919.6367 8440.4434 C
-7919.6729 8440.5117 -7920.0859 8440.293 -7920.1362 8440.584 C
-7920.2178 8440.4697 -7920.1543 8440.2559 -7920.1104 8440.1377 C
-7920.3086 8440.2793 L
-7920.5513 8439.9395 -7919.7559 8439.6719 -7920.0107 8439.2529 C
-7920.1934 8439.2988 L
-7920.3682 8438.9941 -7919.71 8438.9551 -7920.1689 8438.8506 C
-7920.3682 8438.9941 -7920.5381 8439.416 -7920.3608 8439.5449 C
-7920.7754 8439.625 -7920.5527 8440.2383 -7920.9985 8440.2139 C
-7921.1201 8440.043 -7920.6416 8440.1729 -7920.7275 8439.9336 C
-7920.9375 8439.6992 -7921.1484 8440.0645 -7921.3354 8439.9824 C
-7921.1279 8440.0918 -7921.3032 8440.3857 -7921.4375 8440.4395 C
-7921.6641 8440.3018 -7921.29 8440.1641 -7921.6113 8440.1338 C
-7921.6641 8440.3018 -7921.9595 8440.4277 -7921.7041 8440.5449 C
-7921.8203 8440.9258 -7922.0381 8440.4395 -7922.2129 8440.7344 C
-7922.3174 8440.4668 -7921.8823 8440.1152 -7922.2354 8439.9814 C
-7922.1792 8440.2393 -7922.6704 8440.332 -7922.4839 8440.7148 C
-7922.6221 8440.6406 -7922.6367 8440.4375 -7922.5361 8440.2793 C
-7922.7334 8440.1201 -7923.0151 8440.75 -7923.0801 8440.2383 C
-7923.1479 8440.502 L
-7923.21 8440.416 -7923.2983 8440.3516 -7923.3994 8440.209 C
-7923.5732 8440.2041 -7923.96 8440.5664 -7923.9443 8440.168 C
-7924 8440.209 -7924.3975 8440.1914 -7924.2441 8440.4668 C
-7923.9971 8440.6348 -7923.96 8440.2656 -7923.8223 8440.6377 C
-7923.9971 8440.334 -7924.1787 8440.6777 -7924.3213 8440.7793 C
-7924.3447 8440.625 L
-7924.4297 8440.6855 -7924.6255 8440.6514 -7924.6787 8440.8184 C
-7924.6133 8440.7305 -7924.6475 8440.625 -7924.7148 8440.5879 C
-7924.8042 8440.8223 L
-7925.1494 8440.9395 -7924.8857 8440.4102 -7925.2217 8440.4785 C
-7924.9663 8440.2969 L
-7925.0225 8440.3359 -7925.1367 8440.1162 -7925.2979 8440.1895 C
-7925.3604 8440.4033 -7925.4775 8440.6602 -7925.5313 8440.8262 C
-7925.7207 8440.9199 -7925.6162 8440.585 -7925.8027 8440.8047 C
-7925.5586 8440.5469 L
-7925.5215 8440.4766 -7925.7231 8440.1934 -7925.9761 8440.1992 C
-7926.1377 8440.2734 -7926.3887 8440.582 -7926.1338 8440.6992 C
-7926.2607 8440.7031 -7926.4385 8440.5723 -7926.3379 8440.416 C
-7926.6255 8440.4902 -7926.2998 8440.6465 -7926.5479 8440.7793 C
-7926.6494 8440.6367 -7926.9658 8440.4336 -7927.1563 8440.2266 C
-7926.8975 8439.8682 L
-7927.0693 8439.8652 L
-7926.8467 8439.5781 -7927.1826 8439.6465 -7927.0566 8439.3438 C
-7927.1743 8439.2969 -7927.3169 8439.3994 -7927.4307 8439.4785 C
-7927.0864 8439.9629 -7927.8159 8440.1406 -7927.7158 8440.582 C
-7928.1875 8440.7031 -7928.0107 8439.5078 -7928.5024 8440.1992 C
-7928.4219 8440.3145 -7928.6533 8440.6504 -7928.3564 8440.5225 C
-7928.6494 8440.4746 -7928.5557 8440.9658 -7928.9014 8440.7832 C
-7928.6455 8440.6016 -7929.1763 8440.3359 -7928.8066 8440.0723 C
-7928.8311 8440.2188 -7928.6001 8440.1836 -7928.5435 8440.1426 C
-7928.6641 8439.9727 -7928.5186 8439.6973 -7928.8184 8439.6973 C
-7929.0015 8439.7393 -7929.2524 8439.748 -7929.2158 8439.9785 C
-7929.2085 8440.2314 -7928.9365 8439.9512 -7929.0537 8440.207 C
-7929.4185 8440.2949 -7929.4795 8439.9102 -7929.6304 8440.3594 C
-7929.3999 8440.3232 -7929.3423 8440.584 -7929.3467 8440.7578 C
-7929.6143 8440.8633 L
-7929.5625 8440.6953 L
-7929.9922 8440.5742 -7929.6895 8441 -7930.1055 8440.9551 C
-7930.3008 8440.623 L
-7930.2017 8440.3369 -7929.6953 8440.75 -7929.7695 8440.2842 C
-7930.04 8440.2656 -7930.1299 8440.502 -7930.3848 8440.3818 C
-7930.3281 8440.3418 -7930.2505 8440.3301 -7930.1943 8440.2891 C
-7930.2915 8440.2734 -7930.3877 8439.6563 -7930.7734 8440.0176 C
-7930.9727 8440.1582 -7930.8262 8440.1836 -7930.8311 8440.3574 C
-7931.2656 8440.4102 -7931.3955 8440.5879 -7931.6753 8440.6152 C
-7931.6177 8440.2754 -7932.1699 8440.582 -7931.8608 8440.2344 C
-7931.7188 8440.4336 -7931.0903 8440.4141 -7930.9365 8440.0898 C
-7931.0947 8439.6865 -7930.5952 8440.1465 -7930.5024 8439.7383 C
-7930.8506 8439.7285 -7930.8335 8439.332 -7930.8896 8439.0723 C
-7930.9863 8439.0537 -7931.0801 8439.1641 -7931.1377 8439.2041 C
-7931.1787 8439.4492 -7931.0522 8439.4453 -7931.0449 8439.6973 C
-7931.4336 8439.6309 -7931.8081 8439.7676 -7932.0225 8440.0059 C
-7932.1523 8439.8848 -7932.1113 8439.6406 -7931.9575 8439.6172 C
-7932.4199 8439.6895 -7932.9141 8439.6563 -7933.3535 8439.582 C
-7933.0693 8439.9814 -7933.8433 8439.6758 -7933.6494 8440.0078 C
-7933.4141 8440.0977 -7933.2119 8440.3818 -7933.3418 8440.5605 C
-7933.4888 8440.5352 -7933.3369 8440.3857 -7933.3984 8440.3008 C
-7933.5859 8440.5186 -7933.6895 8439.9512 -7933.8735 8440.2949 C
-7933.4512 8440.166 -7933.7915 8439.8086 -7933.7139 8439.4961 C
-7934.0186 8439.6719 -7933.7007 8439.2734 -7934.0024 8439.2734 C
-7934.3057 8439.4473 -7934.6787 8439.584 -7935.0161 8439.6514 C
-7935.4399 8439.3555 -7936.0898 8439.6465 -7936.4683 8439.6582 C
-7936.6665 8439.5 -7936.5322 8439.1465 -7936.7471 8439.085 C
-7936.9995 8439.0918 -7936.5601 8439.4668 -7936.9336 8439.3047 C
-7936.8975 8439.2344 L
-7937.0107 8439.3164 -7937.5825 8438.9941 -7937.6929 8439.502 C
-7937.5776 8439.1191 L
-7937.6475 8439.084 -7937.7119 8439.1719 -7937.7695 8439.2129 C
-7937.7725 8439.0879 -7937.8535 8438.9746 -7937.7402 8438.8926 C
-7937.9707 8438.6289 -7938.2241 8438.9346 -7938.4746 8438.9453 C
-7938.3135 8439.1719 L
-7938.7422 8439.3496 -7939.0293 8439.125 -7939.4443 8439.2041 C
-7939.4316 8438.9824 L
-7939.6787 8439.1152 L
-7939.6182 8438.9004 -7939.8447 8438.7617 -7939.9751 8438.9414 C
-7939.3335 8438.3984 L
-7939.1553 8438.5293 -7939.5283 8438.666 -7939.4165 8438.8848 C
-7939.3213 8439.0762 -7938.9375 8439.0156 -7938.8755 8438.8018 C
-7939.0225 8438.7773 -7939.0293 8438.8262 -7939.1436 8438.9063 C
-7939.1919 8438.5977 -7938.9688 8438.6094 -7938.8584 8438.4033 C
-7938.9355 8438.416 -7939.0449 8438.3223 -7939.0615 8438.4199 C
-7938.9102 8438.2695 -7938.7578 8438.2461 -7938.5059 8438.2383 C
-7938.6763 8438.3594 -7938.4131 8438.4297 -7938.4775 8438.5176 C
-7938.4575 8438.2461 -7938.2168 8438.1621 -7937.9053 8438.2383 C
-7937.6831 8438.5527 -7937.3208 8438.0361 -7936.96 8438.123 C
-7937.1064 8438.3984 -7937.2935 8438.6191 -7937.5127 8438.7305 C
-7937.2861 8438.8682 -7937.2607 8438.7227 -7937.0337 8438.8613 C
-7936.9238 8438.6563 -7936.8457 8438.3418 -7936.5503 8438.2168 C
-7936.5342 8438.4199 L
-7936.2666 8438.3164 -7936.2666 8438.0156 -7935.9258 8438.0723 C
-7935.3418 8438.1719 -7934.7407 8438.1719 -7934.2949 8438.1973 C
-7934.2783 8438.3994 L
-7934.0303 8437.9658 -7933.4521 8438.2393 -7933.1182 8438.0469 C
-7932.5503 8438.2422 -7931.8848 8437.8535 -7931.5938 8438.2031 C
-7930.5913 8438.0469 -7929.7148 8437.8945 -7928.6768 8437.9688 C
-7928.8516 8438.2637 L
-7928.6655 8438.0469 -7928.7305 8438.4336 -7928.5479 8438.3896 C
-7928.7578 8438.1543 -7928.2949 8438.084 -7928.1665 8437.9033 C
-7927.7041 8438.1328 -7927.1104 8437.8828 -7926.7007 8437.6758 C
-7926.6846 8437.8789 L
-7926.2705 8437.498 -7925.7759 8437.832 -7925.2598 8437.8945 C
-7925.2007 8437.9785 -7925.1074 8438.1689 -7924.9536 8438.1465 C
-7924.6738 8437.8184 -7924.5273 8437.8418 -7924.1167 8437.6367 C
-7923.8169 8437.6367 -7923.3301 8437.7178 -7923.0254 8437.8457 C
-7921.8975 8437.3848 -7920.7456 8437.6797 -7919.5732 8437.4023 C
-7919.4888 8437.6406 L
-7918.3521 8437.1309 -7916.9541 8437.5938 -7915.9839 8437.332 C
-7916.0776 8437.7393 L
-7915.7734 8437.8652 -7915.3843 8437.6328 -7915.4619 8437.3438 C
-7915.1567 8437.4688 -7914.7007 8437.1465 -7914.5068 8437.4814 C
-7914.1953 8437.5566 -7914.1255 8437.293 -7913.8662 8437.2383 C
-7913.2422 8437.3926 -7913.0107 8437.3574 -7912.4224 8437.2813 C
-7912.5684 8437.2559 L
-7912.6328 8437.3457 -7912.6387 8437.5186 -7912.4922 8437.5449 C
-7912.2725 8437.4316 -7911.6846 8437.6543 -7911.9033 8437.168 C
-7911.2754 8437.4492 -7910.4385 8436.9395 -7909.8271 8437.3184 C
-7909.8789 8437.1855 -7909.7246 8437.1602 -7909.6602 8437.0703 C
-7909.1089 8437.0645 -7908.5293 8437.3359 -7908.0898 8437.1094 C
-7908.0024 8437.1758 -7908.2295 8437.3359 -7908.0049 8437.3496 C
-7907.8721 8437.2988 -7908.0024 8437.1758 -7907.8384 8437.1016 C
-7906.9453 8436.8535 -7906.0303 8437.3574 -7905.2188 8437.293 C
-7903.7754 8437.0361 -7902.2695 8437.166 -7900.8867 8437.123 C
-7900.9023 8437.2207 L
-7900.4395 8436.8477 -7899.8159 8437.6025 -7899.4463 8437.041 C
-7899.3369 8437.1338 -7899.0283 8437.085 -7899.1094 8437.2734 C
-7898.7407 8437.0098 -7898.0771 8437.5215 -7897.5439 8437.1865 C
-7897.5928 8437.1777 -7897.6211 8437.1973 -7897.6777 8437.2393 C
-7897.1392 8437.4551 -7896.6641 8437.1602 -7896.0957 8437.3555 C
-7896.1533 8437.3975 -7896.2583 8437.4277 -7896.2754 8437.5254 C
-7896.0557 8437.7129 -7895.7549 8437.1133 -7895.6348 8437.584 C
-7895.5088 8437.5801 -7895.5449 8437.3477 -7895.6221 8437.3613 C
-7894.3779 8437.5449 -7893.0498 8437.2441 -7891.7549 8437.1367 C
-7890.8271 8437.418 -7891.6982 8437.9297 -7890.9663 8437.5781 C
-7890.9063 8437.6689 -7890.9229 8437.3984 -7890.9131 8437.4961 C
-7890.6299 8437.3643 -7890.4717 8438.0215 -7890.2754 8437.7754 C
-7890.3564 8437.4863 -7890.1445 8437.6133 -7890.1387 8437.4375 C
-7889.5713 8437.625 -7889.4575 8437.8857 -7889.0098 8437.666 C
-7889.0435 8437.8184 L
-7888.5186 8437.3887 -7887.9102 8437.6191 -7887.4673 8437.123 C
-7884.5728 8437.0332 -7881.7983 8436.7578 -7878.9761 8436.7002 C
-7876.1865 8436.7949 -7873.4551 8436.5723 -7870.6221 8436.8359 C
-7869.9585 8437.2354 -7869.9087 8437.2246 -7869.1797 8437.0625 C
-7869.2095 8437.127 -7869.2549 8437.1426 -7869.2061 8437.2031 C
-7869.1699 8436.875 -7868.6929 8437.1719 -7868.6235 8436.8594 C
-7867.5762 8436.9199 -7866.6113 8436.8301 -7865.5337 8436.8281 C
-7865.7041 8436.8633 -7865.7896 8437.1309 -7865.5869 8437.1094 C
-7865.3755 8436.9004 L
-7865.3408 8436.9922 L
-7865.2021 8436.9434 -7865.0513 8436.7813 -7865.1943 8436.6758 C
-7862.4873 8436.3926 -7859.8242 8437.0508 -7857.1729 8436.9697 C
-7856.5435 8437.1064 -7855.6475 8436.9814 -7854.9629 8436.9141 C
-7852.9355 8437.3516 -7851.1079 8437.7041 -7849.0479 8437.3984 C
-7849.3169 8438.2461 -7850.1675 8438.4414 V
f
-7940.2578 8438.2422 m
-7940.1855 8438.4063 -7939.9497 8438.4961 -7940.1377 8438.7148 C
-7940.1611 8438.5605 -7940.2822 8438.3887 -7940.2578 8438.2422 C
f
-7933.9619 8439.9297 m
-7933.9536 8439.8809 -7933.8721 8439.9961 -7933.8521 8440.0225 C
-7933.9297 8440.0352 -7934.0024 8440.1729 -7934.0645 8440.0879 C
-7933.9854 8440.0762 -7933.9976 8439.998 -7933.9619 8439.9297 C
f
-7932.3521 8440.0273 m
-7932.3765 8440.1729 -7932.7207 8440.2891 -7932.9238 8440.3066 C
-7932.3521 8440.0273 L
f
-7930.8521 8440.6289 m
-7930.7227 8440.752 -7930.7583 8440.8193 -7930.9326 8440.8154 C
-7930.9453 8440.7383 -7930.8877 8440.6992 -7930.8521 8440.6289 C
f
-7930.7456 8440.2969 m
-7930.6211 8440.293 -7930.5591 8440.3789 -7930.4985 8440.4629 C
-7930.5029 8440.3369 -7930.7871 8440.541 -7930.7456 8440.2969 C
f
-7927.4893 8440.7207 m
-7927.4111 8440.709 -7927.2417 8440.5879 -7927.1689 8440.75 C
-7927.2505 8440.6367 -7927.5498 8440.9346 -7927.4893 8440.7207 C
f
-7925.9761 8440.5 m
-7925.9272 8440.5098 -7925.9072 8440.5361 -7925.8506 8440.4961 C
-7925.7607 8440.5625 -7925.8555 8440.6689 -7925.9312 8440.6826 C
-7925.9761 8440.5 L
f
-7898.4287 8439.9141 m
-7898.5923 8439.9863 L
-7898.5684 8439.8418 L
-7898.4287 8439.9141 L
f
-7886.3574 8439.9063 m
-7886.1943 8439.8145 -7886.2441 8440.043 -7886.2168 8440.0645 C
-7886.3643 8440.0801 -7886.1621 8439.8848 -7886.3574 8439.9063 C
f
-7879.8486 8439.1777 m
-7879.8984 8439.1816 L
-7879.8818 8438.8828 L
-7879.8486 8439.1777 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7914.9727 8441 m
-7914.9727 8414.9717 L
-7941 8414.9717 L
-7941 8441 L
-7914.9727 8441 L
n
0 Ap
0 R
0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 XA
1.125 w-7941 8423.6465 m
-7914.9727 8423.6465 l
S
0.636286 0.625879 0.658045 0.550133 0.258824 0.223529 0.196078 XA
-7941 8432.3242 m
-7914.9727 8432.3242 l
S
0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 XA
0.375 w-7941 8427.9854 m
-7914.9727 8427.9854 l
S
0 O
0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 Xa
1 w-7919.5742 8428.0117 m
-7919.3442 8427.7402 -7919.6914 8427.4541 -7920 8427.2432 c
-7920.1118 8427.166 -7920.5215 8427.3789 -7920.7466 8427.2129 c
-7921.0439 8426.9951 -7921.1826 8426.9082 -7921.4824 8426.9141 c
-7921.6455 8426.918 -7922.0435 8427.0479 -7922.1895 8427.0781 c
-7922.5679 8427.1543 -7922.8022 8427.3516 -7923.3672 8427.2549 c
-7923.7344 8427.1914 -7923.8286 8427.1006 -7923.9233 8427.1484 c
-7924.1118 8427.29 -7924.2202 8427.5137 -7924.4258 8427.5625 c
-7924.9575 8427.6895 -7925.3535 8427.7334 -7925.8818 8427.7227 c
-7926.3047 8427.7129 -7927.4185 8427.7813 -7928.2866 8427.6816 c
-7928.6226 8427.6416 -7928.6025 8427.2168 -7928.7695 8427.2129 c
-7928.8618 8427.2109 -7928.7646 8427.5264 -7928.8306 8427.5469 c
-7929.1694 8427.6533 -7929.4702 8426.5029 -7929.6943 8426.5723 c
-7929.8047 8426.6074 -7929.5562 8427.1533 -7929.6729 8427.1816 c
-7929.8975 8427.2373 -7930.2178 8426.2188 -7930.4321 8426.2813 c
-7930.5635 8426.3184 -7930.2886 8426.7383 -7930.4375 8426.8066 c
-7930.6655 8426.9111 -7930.9087 8426.0352 -7931.1064 8426.1338 C
-7931.1543 8426.1816 -7930.7295 8426.9375 -7931.1685 8426.8789 c
-7931.2871 8426.8613 -7931.5054 8426.3135 -7931.5801 8426.3398 c
-7931.6919 8426.3799 -7931.3535 8426.8018 -7931.4897 8426.9277 C
-7931.7681 8427.1543 -7932.3711 8426.1631 -7932.4575 8426.2344 c
-7932.5791 8426.3359 -7932.1279 8427.0977 -7932.2695 8427.166 C
-7932.4497 8427.4297 -7933.0142 8426.5527 -7933.0889 8426.6016 c
-7933.1777 8426.6602 -7932.9058 8427.0381 -7932.8799 8427.2334 c
-7932.8545 8427.4277 -7932.9966 8427.5615 -7933.2144 8427.5098 c
-7933.4736 8427.4473 -7933.8696 8426.6416 -7933.9727 8426.7354 C
-7934.0791 8426.791 -7933.8682 8427.0781 -7933.7954 8427.3125 c
-7933.7583 8427.4277 -7933.8882 8427.6016 -7934.0298 8427.6016 c
-7934.3135 8427.6494 -7934.6255 8426.998 -7934.7065 8427.1025 c
-7934.7524 8427.1621 -7934.5898 8427.4902 -7934.7295 8427.5879 c
-7934.8994 8427.7061 -7935.3115 8427.2383 -7935.4521 8427.293 C
-7935.5361 8427.3418 -7935.4126 8427.5967 -7935.4927 8427.6533 c
-7935.7295 8427.8193 -7936.0039 8427.4209 -7936.0513 8427.4688 C
-7936.1167 8427.4912 -7936.1201 8427.5361 -7936.2793 8427.6406 c
-7936.4736 8427.7676 -7936.5254 8427.8486 -7936.5425 8427.9648 c
-7936.5654 8428.083 -7936.3135 8428.375 -7936.1655 8428.3496 c
-7935.8223 8428.29 -7935.8662 8428.8496 -7935.6328 8428.7158 c
-7935.5679 8428.6797 -7935.6592 8428.2588 -7935.4199 8428.2656 c
-7935.0488 8428.2783 -7934.9858 8428.8213 -7934.7817 8428.8105 c
-7934.6406 8428.8037 -7934.8521 8428.1836 -7934.6328 8428.2607 c
-7934.4751 8428.3164 -7934.0063 8429.3018 -7933.9795 8429.21 c
-7933.8975 8428.9424 -7934.0703 8428.3984 -7933.9409 8428.4082 c
-7933.7568 8428.4229 -7933.5078 8429.3174 -7933.2544 8429.4375 c
-7933.1826 8429.4727 -7933.3774 8428.6006 -7933.1958 8428.5967 C
-7933.0898 8428.6465 -7932.7578 8429.4492 -7932.6274 8429.498 C
-7932.5591 8429.4824 -7932.5879 8429.125 -7932.5176 8429.1045 c
-7932.4688 8429.0898 -7932.2817 8429.5654 -7932.21 8429.5234 c
-7932.1055 8429.4629 -7932.2471 8428.9922 -7932.0889 8428.9229 c
-7931.9175 8428.8486 -7931.4878 8429.8926 -7931.3486 8429.7979 c
-7931.2769 8429.75 -7931.3574 8429.21 -7931.21 8429.2461 c
-7931.0718 8429.2783 -7930.9414 8429.6143 -7930.8081 8429.6426 c
-7930.7295 8429.6582 -7930.7935 8429.1914 -7930.7495 8429.1738 c
-7930.5889 8429.1152 -7930.2329 8429.6719 -7930.0688 8429.5234 c
-7929.8584 8429.335 -7929.9395 8428.9697 -7929.8345 8428.9824 c
-7929.6274 8429.0059 -7929.4912 8429.2432 -7929.4146 8429.1836 c
-7929.2642 8429.0684 -7929.3281 8428.7793 -7929.0527 8428.6924 c
-7928.8975 8428.6426 -7928.7935 8428.9346 -7928.7495 8428.9307 c
-7928.6738 8428.9277 -7928.6782 8428.8301 -7928.6665 8428.7246 c
-7928.6328 8428.4609 -7928.6064 8428.3994 -7928.4878 8428.377 c
-7928.0854 8428.3535 -7927.5625 8428.2842 -7927.1807 8428.2754 c
-7926.6274 8428.2607 -7925.2607 8428.2373 -7925.1182 8428.2373 c
-7925 8428.2129 -7924.7432 8428.3945 -7924.6689 8428.4609 c
-7924.4678 8428.6455 -7924.2998 8428.8594 -7923.9858 8429.1201 c
-7923.8906 8429.2012 -7923.8081 8429.1807 -7923.7378 8429.1563 c
-7923.5249 8429.085 -7923.4585 8429.0332 -7923.2202 8429.002 c
-7922.9175 8428.959 -7922.4272 8429.0488 -7922.1245 8429.1426 c
-7921.6035 8429.3018 -7921.5264 8429.3242 -7921.0977 8429.2754 c
-7920.6992 8429.2295 -7920.0586 8429.1582 -7920.0479 8428.8105 c
-7920.0415 8428.5957 -7919.9414 8428.4434 -7919.5742 8428.0117 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7914.9722 8441 m
-7914.9722 8414.9727 L
-7941 8414.9727 L
-7941 8441 L
-7914.9722 8441 L
n
0 Ap
0 R
0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 XA
0.375 w-7923.6455 8427.9893 m
-7914.9736 8427.9893 l
S
-7927.9839 8441 m
-7927.9839 8432.3242 l
S
0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 XA
1.125 w-7923.7202 8423.6504 m
-7914.9727 8423.6504 l
S
-7932.3232 8440.999 m
-7932.3232 8431.6455 l
S
0.636286 0.625879 0.658045 0.550133 0.258824 0.223529 0.196078 XA
-7923.6504 8440.999 m
-7923.6504 8438.5869 l
-7920.9937 8438.3633 -7919.3096 8436.6602 v
-7917.6064 8434.9336 -7917.3774 8432.3281 y
-7914.9727 8432.3281 l
S
*u
1 D
0 O
0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 Xa
1 w-7931.8418 8425.1855 m
-7931.8418 8425.25 -7931.8218 8425.291 -7931.7783 8425.291 c
-7931.6943 8425.291 -7931.4634 8424.9541 -7931.3994 8424.9541 c
-7931.3154 8424.9541 -7931.2729 8424.9961 -7931.2729 8425.1016 c
-7931.2729 8425.1855 -7931.5264 8426.0928 y
-7931.5264 8426.1338 -7931.5264 8426.1338 -7931.5049 8426.1338 c
-7931.4414 8426.1338 -7931.0615 8425.5869 -7930.9351 8425.5869 c
-7930.9146 8425.5869 -7930.8936 8425.6074 -7930.8936 8425.6289 c
-7931.1675 8426.5352 -7931.1675 8426.7256 v
-7931.1675 8426.7891 -7931.1675 8426.8105 -7931.1465 8426.8105 c
-7931.1055 8426.8105 -7930.6826 8426.2402 -7930.5562 8426.2402 c
-7930.5352 8426.2402 -7930.5137 8426.2607 -7930.5137 8426.2822 c
-7930.5137 8426.3457 -7930.7666 8427.084 -7930.7666 8427.252 c
-7930.7666 8427.2949 -7930.7666 8427.2949 -7930.7446 8427.2949 c
-7930.6826 8427.2949 -7930.4722 8427.084 -7930.4297 8427.084 c
-7930.4082 8427.084 -7930.3882 8427.1055 -7930.3882 8427.126 c
-7930.3882 8427.1465 -7930.4927 8427.5059 -7930.4927 8427.5898 c
-7930.4927 8427.6113 -7930.4927 8427.6113 -7930.4722 8427.6113 c
-7930.4297 8427.6113 -7930.0918 8427.252 -7930.0078 8427.252 c
-7929.9658 8427.252 -7929.9233 8427.2949 -7929.9233 8427.3789 c
-7929.9233 8427.5273 -7930.1138 8428.2441 -7930.1138 8428.2861 c
-7930.1138 8428.3701 -7930.0918 8428.4121 -7930.0498 8428.4121 c
-7929.9658 8428.4121 -7929.7119 8428.0957 -7929.6494 8428.0957 c
-7929.5854 8428.0957 -7929.5439 8428.1162 -7929.5439 8428.1807 c
-7929.5854 8428.6016 L
-7929.5854 8428.666 -7929.5854 8428.6855 -7929.5654 8428.6855 c
-7929.5225 8428.6855 -7929.2915 8428.3916 -7929.2065 8428.3916 c
-7929.1006 8428.3916 -7929.1006 8428.877 -7929.1006 8428.9395 c
-7929.1006 8429.0449 -7929.0166 8429.1289 -7928.8896 8429.1289 c
-7928.8057 8429.1289 -7928.4678 8428.8975 -7928.4473 8428.8975 c
-7928.3623 8428.8975 -7928.3198 8429.3398 -7928.2568 8429.3398 c
-7928.1943 8429.3398 -7927.9199 8429.2129 -7927.8564 8429.2129 c
-7927.6455 8429.2129 -7927.6035 8429.2988 -7927.6035 8429.4668 c
-7927.6255 8429.6143 L
-7927.6255 8429.6563 -7927.6035 8429.6563 -7927.5835 8429.6563 c
-7927.4985 8429.6563 -7927.2241 8429.3818 -7927.1392 8429.3818 c
-7926.9287 8429.3818 -7924.8198 8431.4492 -7924.5454 8431.7227 c
-7924.3984 8431.8906 -7924.3984 8432.1865 -7924.3984 8432.3135 c
-7924.3984 8433.1777 -7924.3984 8433.2617 -7924.2295 8433.3457 c
-7923.5977 8433.5996 -7923.5127 8433.7471 -7922.7334 8435.0332 c
-7922.6479 8435.1807 -7921.7407 8435.793 -7921.5942 8435.793 c
-7921.4878 8435.793 -7921.1094 8435.5391 -7921.0239 8435.5391 c
-7920.9194 8435.5391 -7920.8135 8435.6025 -7920.8135 8435.7705 c
-7920.8135 8436.2139 -7921.3408 8436.7207 -7921.9312 8436.7207 c
-7922.7534 8436.7207 -7923.0913 8436.0234 -7923.1338 8435.625 c
-7923.1543 8435.4766 -7923.2393 8435.3916 -7923.3447 8435.3916 c
-7923.3862 8435.3916 -7923.4287 8435.4121 -7923.4702 8435.4766 c
-7923.9561 8436.2773 -7924.9473 8436.7207 -7925.7065 8436.7207 c
-7926.7393 8436.7207 -7927.8774 8436.0879 -7928.3418 8435.8145 c
-7928.7842 8435.5615 -7929.4814 8435.3916 -7929.8809 8435.3916 c
-7930.3242 8435.3916 -7930.3662 8435.5391 -7930.3662 8435.793 c
-7930.3662 8435.9404 -7929.9023 8436.3818 -7929.9023 8436.5098 c
-7929.9023 8436.6357 -7930.0498 8436.7207 -7930.4082 8436.7207 c
-7930.8936 8436.7207 -7931.5679 8436.0029 -7931.5679 8435.2236 c
-7931.5679 8434.6113 -7930.7666 8434.085 -7930.3022 8434.085 c
-7929.3755 8434.085 -7929.0942 8434.4434 -7928.5264 8434.9072 c
-7928.4414 8434.9697 -7928.3774 8434.9922 -7928.3359 8434.9922 c
-7928.1895 8434.9922 -7928.1895 8433.8945 -7928.1895 8433.7695 c
-7928.1895 8433.6201 -7928.2729 8433.5576 -7928.3774 8433.5576 c
-7930.7822 8433.5576 -7935.6592 8432.334 -7937.3672 8426.1777 c
-7937.4297 8425.9658 -7937.5361 8425.8613 -7937.6406 8425.8613 c
-7937.7881 8425.8613 -7938.7793 8426.7041 -7938.7793 8428.2861 c
-7938.7793 8430.1201 -7937.5767 8431.0898 -7936.9873 8431.0898 c
-7936.8398 8431.0898 -7936.6494 8431.0693 -7936.6494 8430.9209 c
-7936.6494 8430.8584 -7936.6929 8430.7949 -7936.7759 8430.6895 c
-7937.1143 8430.3535 -7937.3672 8429.7197 -7937.3672 8429.4033 c
-7937.3672 8429.1914 -7937.2607 8429.0234 -7937.1143 8429.0234 c
-7936.9033 8429.0234 -7936.5654 8429.9727 -7936.46 8430.1201 c
-7936.3335 8430.3311 -7935.9546 8430.7109 -7935.2378 8431.2383 c
-7934.4995 8431.7637 -7933.0654 8433.0723 -7933.0654 8434.3369 c
-7933.0654 8435.709 -7934.1191 8436.6152 -7934.9209 8436.6152 c
-7935.7007 8436.6152 -7936.6714 8436.0879 -7937.0713 8435.6025 c
-7937.7041 8434.8652 -7938.3154 8434.2949 -7938.8218 8434.2949 c
-7939.1592 8434.2949 -7939.3066 8434.5059 -7939.3066 8434.7168 c
-7939.3066 8435.0537 -7939.0537 8435.2861 -7938.5479 8435.3281 c
-7937.9575 8435.3711 -7937.8936 8435.793 -7937.8936 8436.1289 c
-7937.8936 8436.4033 -7938.4209 8436.7207 -7938.8433 8436.7207 c
-7939.4751 8436.7207 -7940.2974 8436.0234 -7940.2974 8434.1904 c
-7940.2974 8432.6924 -7939.0537 8432.2295 -7938.5679 8432.2295 c
-7938.1265 8432.2295 -7937.4722 8432.3135 -7937.0928 8432.6504 c
-7935.8066 8433.8535 -7935.1318 8434.0625 -7934.5835 8434.0625 c
-7934.3721 8434.0625 -7934.2881 8434.0625 -7934.2881 8434.2109 c
-7934.2881 8434.5273 -7935.0474 8434.7168 -7935.1318 8434.7383 c
-7935.3423 8434.8008 -7935.5103 8435.0332 -7935.5103 8435.2441 c
-7935.5103 8435.7295 -7935.2378 8435.75 -7934.8774 8435.75 c
-7934.5215 8435.75 -7933.8042 8435.3916 -7933.8042 8434.1904 c
-7933.8042 8433.1992 -7934.9424 8432.0391 -7935.4058 8431.8076 c
-7935.7007 8431.6377 -7936.5874 8431.6602 -7936.9458 8431.6172 c
-7937.6406 8431.5322 -7939.4121 8430.585 -7939.4121 8428.0957 c
-7939.4336 8426.6826 -7938.1265 8425.3555 -7937.8511 8425.166 c
-7937.6826 8425.0586 -7937.5986 8424.9326 -7937.5986 8424.7637 c
-7937.5986 8424.5527 -7937.6626 8421.6221 -7937.9995 8421.6221 c
-7938.4424 8421.6221 -7938.5054 8421.6221 -7938.5054 8421.8135 c
-7938.21 8422.9082 -7938.21 8423.1406 v
-7938.21 8423.457 -7938.4424 8424.9326 -7939.3066 8424.9326 c
-7939.5806 8424.9326 -7940.0449 8424.7002 -7940.0449 8424.3848 c
-7940.0449 8424.0898 -7939.3486 8422.8877 -7939.3486 8422.6133 c
-7939.3486 8422.1279 -7939.3921 8422.1074 -7940.0654 8421.4961 c
-7940.2559 8421.3486 -7940.3193 8421.2227 -7940.3193 8421.0313 c
-7940.3193 8420.8633 -7940.2134 8420.7354 -7940.0449 8420.7354 c
-7939.8975 8420.7354 -7939.3281 8421.0117 -7939.2017 8421.0313 c
-7939.0752 8421.0313 -7938.8433 8421.0527 -7938.6538 8421.0527 c
-7938.2734 8421.0527 -7938.0845 8420.9258 -7938.0845 8420.7998 c
-7938.0845 8420.5674 -7938.0845 8419.8936 -7938.9263 8418.4375 c
-7939.1167 8418.1006 -7940.2974 8416.7725 -7940.2974 8416.4346 c
-7940.2974 8416.2656 -7940.2134 8416.2461 -7940.1089 8416.2461 c
-7939.9185 8416.2461 -7939.4966 8416.667 -7939.3706 8416.8145 c
-7938.1265 8418.1426 -7937.3042 8419.5762 -7936.9238 8420.8418 c
-7936.8398 8421.1582 -7936.7344 8421.0742 -7936.5654 8421.0957 c
-7934.4155 8421.6016 -7932.3271 8424.1104 -7932.3271 8424.1318 c
-7932.4326 8424.4053 -7932.4326 8424.4688 v
-7932.4326 8424.5957 -7932.3271 8424.6172 -7932.3057 8424.6172 c
-7932.2432 8424.6172 -7932.0527 8424.4053 -7932.0103 8424.4053 c
-7931.9058 8424.4053 -7931.7783 8424.4902 -7931.7783 8424.6377 C
-7931.8418 8425.1855 l
f
0 D
-7935.1104 8423.6895 m
-7934.5215 8423.6895 -7934.0986 8423.7949 -7933.6982 8424.0684 c
-7933.6553 8424.0898 -7933.6138 8424.1104 -7933.5928 8424.1104 c
-7933.5498 8424.1104 -7933.5498 8424.0898 -7933.5498 8424.0469 c
-7933.5498 8423.626 -7935.4272 8421.666 -7936.5654 8421.666 c
-7936.6289 8421.666 -7936.6714 8421.707 -7936.6714 8421.7695 c
-7936.6714 8421.96 -7936.5874 8423.9629 -7936.2495 8423.9629 c
-7936.1865 8423.9629 -7936.1016 8423.9414 -7936.0386 8423.9004 c
-7935.7007 8423.752 -7935.4902 8423.6895 -7935.1104 8423.6895 c
f
-7934.5835 8426.4512 m
-7934.5835 8426.0293 -7934.5625 8425.5654 -7933.8662 8425.5654 c
-7933.2334 8425.5654 -7932.6431 8426.2197 -7932.4961 8426.3672 c
-7932.4326 8426.4092 -7932.3906 8426.4297 -7932.3486 8426.4297 c
-7932.3271 8426.4297 -7932.2847 8426.3877 -7932.2847 8426.3457 c
-7932.2847 8425.9023 -7933.6553 8424.2373 -7935.0049 8424.2373 c
-7935.2578 8424.2373 -7936.2705 8424.4053 -7936.2705 8424.9541 c
-7936.2705 8425.207 -7935.8906 8426.5781 -7935.2793 8427.6533 c
-7933.9087 8430.1416 -7929.7119 8431.7002 -7927.8145 8431.7002 c
-7926.9072 8431.7227 -7926.6118 8431.4063 -7926.4863 8431.3848 c
-7926.4648 8431.3848 -7926.4438 8431.3643 -7926.4233 8431.3643 c
-7926.3174 8431.3643 -7926.1904 8431.4277 -7926.1904 8431.5752 c
-7926.1904 8431.5967 -7926.2119 8431.5967 v
-7926.3594 8432.7344 -7926.4014 8433.1357 -7926.4014 8434.3994 c
-7926.4014 8435.793 -7926.4014 8435.9189 -7925.4321 8435.9189 c
-7924.1455 8435.9189 -7923.8506 8434.8438 -7923.8506 8434.6113 c
-7923.8506 8434.1904 -7924.4399 8433.8945 -7924.5889 8433.8945 c
-7924.7358 8433.8945 -7924.9058 8434.002 -7924.9058 8434.1904 c
-7924.9058 8434.4854 -7924.9473 8434.6328 -7925.2207 8434.6328 c
-7925.4951 8434.6328 -7925.4951 8434.2744 -7925.4951 8434.168 c
-7925.4951 8433.916 -7925.3896 8433.6631 -7925.1782 8433.5361 c
-7924.7998 8433.2832 -7924.7998 8432.8828 -7924.7998 8432.6719 c
-7924.7998 8432.5664 -7924.7998 8432.4395 -7924.8198 8432.334 c
-7924.8418 8432.166 -7926.7817 8430.1201 -7927.0977 8430.1201 c
-7927.2446 8430.1201 -7927.5615 8430.2666 -7928.4258 8430.2666 c
-7930.5767 8430.2666 -7931.5474 8428.5391 -7931.7378 8428.0117 c
-7931.9897 8427.2949 -7932.7915 8426.999 -7933.0225 8426.999 c
-7933.2129 8426.999 -7933.2129 8427.042 -7933.2129 8427.4424 c
-7933.2129 8427.5273 -7933.4238 8427.8633 y
-7933.4238 8428.0537 -7932.3906 8428.3066 -7932.3906 8428.4961 c
-7932.3906 8428.666 -7932.5801 8428.6855 -7932.7271 8428.6855 c
-7932.8115 8428.6855 -7933.8882 8428.6855 -7934.3306 8427.8633 c
-7934.5415 8427.4629 -7934.5835 8426.8945 -7934.5835 8426.4512 c
f
1 D
-7930.4927 8424.1953 m
-7930.4927 8424.1514 -7930.5137 8424.1318 -7930.5352 8424.1318 c
-7930.5986 8424.1318 -7930.7666 8424.4688 -7930.8506 8424.4688 c
-7930.9146 8424.4688 -7930.9995 8424.3848 -7931.0415 8424.2783 c
-7931.0615 8424.1953 -7931.1255 8423.7305 -7931.21 8423.7305 c
-7931.2524 8423.7305 -7931.4209 8423.9629 -7931.4634 8423.9629 c
-7931.6104 8423.9629 -7931.7158 8423.7305 -7931.7158 8423.5215 c
-7931.7158 8423.415 -7931.7783 8423.415 -7931.9263 8423.415 c
-7932.5166 8423.415 -7934.1406 8421.2432 -7934.5625 8419.4922 c
-7934.6055 8419.3242 -7934.5835 8419.1768 -7934.8994 8419.0703 c
-7937.0713 8418.334 -7939.5176 8416.1816 -7939.5176 8416.0557 c
-7939.5176 8415.9082 -7939.4336 8415.8242 -7939.3066 8415.8242 c
-7939.2432 8415.8242 -7939.1592 8415.8242 -7938.6538 8416.1602 c
-7937.7681 8416.751 -7935.7217 8418.0381 -7934.8994 8418.0381 c
-7934.6265 8418.0381 -7934.6055 8417.6797 -7934.6055 8417.4258 c
-7934.6055 8417.2354 -7934.6265 8417.0039 -7934.6265 8416.8574 c
-7934.6465 8416.583 -7934.9634 8416.2656 -7934.9634 8416.0977 c
-7934.9634 8415.9502 -7934.8154 8415.8447 -7934.6465 8415.8447 c
-7934.4575 8415.8447 -7934.3306 8415.8662 -7934.1606 8416.0557 c
-7933.8662 8416.3926 -7933.7402 8416.541 -7933.4238 8416.541 c
-7933.1914 8416.541 -7932.1377 8415.8242 -7931.8838 8415.8242 c
-7931.5679 8415.8242 -7931.1895 8416.3086 -7931.1895 8416.6045 c
-7931.1895 8417.3418 -7932.0942 8417.9326 -7932.6431 8417.9326 c
-7933.0225 8417.9326 -7933.4438 8417.8066 -7933.6353 8417.5742 c
-7933.6982 8417.5098 -7933.7607 8417.4688 -7933.8242 8417.4688 c
-7933.9937 8417.4688 -7934.1191 8417.9326 -7934.1191 8417.9746 c
-7934.1191 8418.3975 -7931.2729 8418.459 -7930.9146 8418.459 c
-7930.7666 8418.459 -7930.6401 8418.375 -7930.5352 8418.2061 c
-7930.3447 8417.9121 -7929.1855 8416.6895 -7927.6255 8416.6895 c
-7925.79 8416.6895 -7924.0825 8417.9521 -7924.0825 8419.8506 c
-7924.0825 8419.957 -7924.1245 8420.5039 -7924.1245 8420.5264 c
-7924.1245 8420.5898 -7923.0063 8422.3389 -7921.6782 8422.3389 c
-7920.6245 8422.3389 -7920.2656 8421.75 -7920.2656 8421.2637 c
-7920.2656 8421.0313 -7920.3711 8420.3789 -7920.8984 8420.3789 c
-7921.1094 8420.3789 -7921.2144 8420.5898 -7921.2144 8420.9688 c
-7921.2144 8421.0527 -7921.0039 8421.4326 -7921.0039 8421.5381 c
-7921.0039 8421.5801 -7921.0239 8421.6016 -7921.0879 8421.6016 c
-7921.4258 8421.6016 -7921.9521 8421.2432 -7922.1846 8420.5898 c
-7922.4595 8419.873 -7922.8594 8419.1768 -7923.1958 8418.7754 c
-7923.5127 8418.418 -7923.6182 8417.8262 -7923.6182 8417.4893 c
-7923.6182 8417.0039 -7923.1338 8415.8447 -7921.4878 8415.8447 c
-7920.2871 8415.8447 -7919.4434 8416.583 -7919.4434 8417.1943 c
-7919.4434 8417.8066 -7919.7598 8418.1855 -7920.2026 8418.1855 c
-7920.6455 8418.1855 -7920.9824 8417.8477 -7920.9824 8417.5098 c
-7920.9824 8416.8359 -7921.1514 8416.6895 -7921.4878 8416.6895 c
-7921.6992 8416.6895 -7921.8896 8416.8145 -7921.8896 8417.1309 c
-7921.8896 8417.3633 -7921.8896 8417.7422 -7920.3711 8419.0078 c
-7919.8857 8419.4082 -7919.4214 8420.1055 -7919.4214 8420.8848 c
-7919.4214 8421.6445 -7920.4561 8422.8447 -7921.6362 8422.8447 c
-7922.8594 8422.8447 -7923.6401 8422.0654 -7924.2515 8421.3486 c
-7924.5454 8421.0117 -7925.9814 8419.3242 -7926.0439 8419.3018 c
-7926.2334 8419.1543 -7926.3174 8419.0293 -7926.3174 8418.9023 c
-7926.3174 8418.7969 -7926.2119 8418.6914 -7926.0854 8418.6914 c
-7925.8535 8418.6914 -7924.9058 8419.6406 -7924.8198 8419.6406 c
-7924.7568 8419.6406 -7924.7153 8419.5762 -7924.7153 8419.4922 c
-7924.7153 8418.7334 -7925.8535 8417.2578 -7927.6255 8417.2578 c
-7929.1006 8417.2578 -7929.9863 8418.375 -7929.9863 8418.418 c
-7929.9863 8418.5439 -7929.8394 8418.6689 -7929.5225 8418.7334 c
-7925.6426 8419.4717 -7922.3955 8423.0215 -7922.3955 8427.6377 c
-7922.3955 8427.7441 -7922.2256 8427.7705 -7922.0786 8427.7705 c
-7921.7202 8427.7705 -7921.0879 8427.8496 -7921.0879 8427.5762 c
-7921.0879 8427.4697 -7921.1294 8427.3438 -7921.1934 8427.2168 c
-7921.5518 8426.6465 -7921.8682 8426.4727 -7921.8682 8425.5215 c
-7921.8682 8425.0586 -7921.4878 8424.5322 -7920.8984 8424.5322 c
-7919.8657 8424.5322 -7919.4214 8425.5654 -7919.4214 8425.7969 c
-7919.4214 8425.9658 -7919.5073 8426.0293 -7919.5903 8426.0293 c
-7919.7178 8426.0293 -7920.2241 8425.502 -7920.3711 8425.502 c
-7920.5615 8425.502 -7920.7085 8425.5439 -7920.7085 8426.0293 c
-7920.7085 8426.3672 -7919.4214 8430.0781 -7919.4214 8430.8789 c
-7919.4214 8431.4492 -7919.7598 8432.1455 -7920.6455 8432.6504 c
-7920.6875 8432.6719 -7920.7085 8432.6924 -7920.7085 8432.7344 c
-7920.7085 8432.8184 -7920.5615 8432.9248 -7920.4126 8432.9658 c
-7919.8018 8433.1357 -7919.4214 8433.2412 -7919.4214 8434.1904 c
-7919.4214 8434.5488 -7919.7598 8435.2236 -7920.0127 8435.2236 c
-7920.2026 8435.2236 -7920.2026 8435.1807 -7920.2026 8434.8223 c
-7920.2026 8434.6748 -7920.2446 8434.5693 -7920.3926 8434.4639 c
-7920.7085 8434.2529 -7920.7295 8434.2109 -7920.8135 8433.7266 c
-7920.8774 8433.4102 -7921.0039 8433.3242 -7922.1426 8432.6924 c
-7922.5854 8432.4189 -7922.6904 8432.1865 -7922.7744 8431.9551 c
-7922.8594 8431.7637 -7922.9233 8431.7637 -7923.4287 8431.7637 c
-7923.9561 8431.7637 -7926.5073 8429.0449 -7926.5073 8428.918 c
-7926.5073 8428.8555 -7926.3809 8428.5596 -7926.3809 8428.4961 c
-7926.3809 8428.4336 -7926.4014 8428.3916 -7926.4438 8428.3916 c
-7926.4863 8428.3916 -7926.6338 8428.6016 -7926.6758 8428.6016 c
-7926.7817 8428.6016 -7926.7817 8428.4121 -7926.7817 8428.2637 c
-7926.7817 8428.1602 -7926.5703 8427.5898 -7926.5703 8427.4424 c
-7926.5703 8427.3584 -7926.5918 8427.2949 -7926.6338 8427.2949 c
-7926.7178 8427.2949 -7926.9072 8427.7578 -7926.9922 8427.7578 c
-7927.0342 8427.7578 -7927.0762 8427.7168 -7927.0762 8427.5898 c
-7927.0762 8427.4424 -7926.8862 8426.7256 y
-7926.8862 8426.6621 -7926.9072 8426.5566 -7926.9502 8426.5566 c
-7927.0342 8426.5566 -7927.1826 8426.957 -7927.2666 8426.957 c
-7927.3286 8426.957 -7927.3926 8426.873 -7927.3926 8426.7256 c
-7927.3926 8426.6406 -7927.2446 8426.2197 -7927.2446 8426.1143 c
-7927.2446 8426.0508 -7927.2666 8425.9863 -7927.3086 8425.9863 c
-7927.3506 8425.9863 -7927.5835 8426.5996 -7927.7095 8426.5996 c
-7927.7935 8426.5996 -7927.8994 8426.4922 -7927.8994 8426.3877 c
-7927.8994 8426.3037 -7927.7729 8425.9453 -7927.7729 8425.8613 c
-7927.7729 8425.8184 -7927.7729 8425.7969 -7927.7935 8425.7969 c
-7927.8774 8425.7969 -7928.0254 8426.2822 -7928.1104 8426.2822 c
-7928.3418 8426.2822 -7928.3623 8425.8613 -7928.3623 8425.6709 c
-7928.3623 8425.5869 -7928.2998 8425.25 -7928.2998 8425.1855 c
-7928.2998 8425.123 -7928.3198 8425.1016 -7928.3418 8425.1016 c
-7928.4897 8425.1016 -7928.6782 8425.9023 -7928.8271 8425.9023 c
-7929.0386 8425.9023 -7929.0386 8425.7129 -7929.0386 8425.4814 c
-7929.0166 8424.9541 L
-7929.0166 8424.9326 -7929.0386 8424.9121 y
-7929.0586 8424.9121 -7929.1006 8424.9326 -7929.1226 8424.9961 c
-7929.1855 8425.207 -7929.3115 8425.6289 -7929.5225 8425.6289 c
-7929.6694 8425.6289 -7929.8174 8425.46 -7929.8174 8425.3135 c
-7929.8174 8425.0801 -7929.7119 8424.7002 -7929.7119 8424.4688 c
-7929.7119 8424.4053 -7929.7334 8424.3848 -7929.7754 8424.3848 c
-7929.8608 8424.3848 -7929.9863 8424.8262 -7930.0278 8424.9121 c
-7930.0918 8424.9961 -7930.1553 8425.0176 -7930.2192 8425.0176 c
-7930.5352 8425.0176 -7930.5352 8424.7002 -7930.5352 8424.5527 C
-7930.4927 8424.1953 l
f
0 D
-7931.8633 8419.8301 m
-7931.8633 8419.5977 -7933.8042 8419.4082 -7933.8662 8419.4082 c
-7933.9722 8419.4082 -7934.0352 8419.4717 -7934.0352 8419.5762 c
-7934.0352 8420.4414 -7932.2847 8422.6768 -7931.8633 8422.6768 c
-7931.7998 8422.6768 -7931.7783 8422.6563 -7931.7783 8422.5928 c
-7932.2002 8421.3486 -7932.2002 8421.0957 v
-7932.2002 8420.7158 -7932.0942 8420.4629 -7931.9058 8420.041 c
-7931.8838 8419.957 -7931.8633 8419.8936 -7931.8633 8419.8301 c
f
-7923.1338 8431.2793 m
-7922.9858 8431.2793 -7922.4795 8430.7744 -7922.3325 8430.7744 c
-7922.2065 8430.7744 -7922.0791 8430.8584 -7922.0791 8431.0059 c
-7922.0791 8431.0898 -7922.2695 8431.5322 -7922.2695 8431.6377 c
-7922.2695 8431.9961 -7921.8896 8432.293 -7921.5098 8432.293 c
-7921.1094 8432.293 -7919.9702 8431.9756 -7919.9702 8430.752 c
-7919.9702 8429.6563 -7920.3926 8429.6563 -7922.0366 8429.6563 c
-7922.3955 8429.6563 -7924.0615 8429.8457 -7924.3145 8429.8457 c
-7924.4399 8429.8457 -7924.4834 8429.6768 -7924.4834 8429.5498 c
-7924.4834 8429.5088 -7924.4834 8429.4668 -7924.4614 8429.4453 c
-7924.3984 8429.0664 -7924.1675 8428.5176 -7924.1675 8428.1377 c
-7924.1675 8423.6895 -7928.2998 8419.8301 -7930.7666 8419.8301 c
-7931.4209 8419.8301 -7931.6519 8420.6318 -7931.6519 8421.0527 c
-7931.6519 8422.7822 -7929.6694 8423.8145 -7929.4175 8423.8145 c
-7929.3545 8423.8145 -7929.3335 8423.7949 -7929.3335 8423.752 c
-7929.3335 8423.71 -7929.3545 8423.668 -7929.3975 8423.626 c
-7929.5225 8423.457 -7930.0498 8422.8447 -7930.0498 8422.2129 c
-7930.0498 8421.875 -7929.7554 8421.4326 -7928.9951 8421.4326 c
-7927.7305 8421.4326 -7927.1826 8422.7822 -7927.1826 8423.1406 c
-7927.1826 8423.2891 -7927.2446 8423.499 -7927.4561 8423.499 c
-7927.6035 8423.499 -7928.0049 8422.8447 -7928.1519 8422.8447 c
-7928.2158 8422.8447 -7928.4473 8422.9717 -7928.5103 8422.9717 c
-7928.5942 8422.9717 -7928.6582 8422.9512 -7928.7422 8422.9512 c
-7928.8057 8422.9512 -7928.8481 8423.0137 -7928.8481 8423.1191 c
-7928.8481 8423.4785 -7928.3623 8424.0469 -7927.8774 8424.3008 c
-7926.9722 8424.7637 -7925.6226 8426.0928 -7925.6226 8427.5479 c
-7925.6226 8427.9688 -7925.6846 8428.3701 -7925.6846 8428.707 c
-7925.6846 8429.2559 -7924.7568 8430.1201 -7923.8081 8431.0059 c
-7923.6401 8431.1533 -7923.3862 8431.2793 -7923.1338 8431.2793 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7914.9722 8441 m
-7914.9722 8414.9727 L
-7941 8414.9727 L
-7941 8441 L
-7914.9722 8441 L
n
0 Ap
0 R
0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 XA
0.375 w-7923.6455 8427.9893 m
-7914.9736 8427.9893 l
S
-7927.9839 8441 m
-7927.9839 8432.3242 l
S
0.636286 0.625879 0.658045 0.550133 0.258824 0.223529 0.196078 XA
1.125 w-7923.7202 8423.6504 m
-7914.9727 8423.6504 l
S
-7932.3232 8441 m
-7932.3232 8431.6455 l
S
0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 XA
-7923.6504 8441 m
-7923.6504 8438.5869 l
-7920.9937 8438.3633 -7919.3096 8436.6602 v
-7917.6064 8434.9336 -7917.3774 8432.3281 y
-7914.9727 8432.3281 l
S
*u
0 O
0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 Xa
1 w-7931.7783 8424.6377 m
-7931.7783 8424.4902 -7931.9058 8424.4053 -7932.0103 8424.4053 c
-7932.0527 8424.4053 -7932.2432 8424.6172 -7932.3057 8424.6172 c
-7932.3271 8424.6172 -7932.4326 8424.5957 -7932.4326 8424.4688 c
-7932.4326 8424.4053 -7932.3271 8424.1318 y
-7932.3271 8424.1104 -7934.4155 8421.6016 -7936.5654 8421.0957 c
-7936.7344 8421.0742 -7936.8398 8421.1582 -7936.9238 8420.8418 c
-7937.3042 8419.5762 -7938.1265 8418.1426 -7939.3706 8416.8145 c
-7939.4966 8416.668 -7939.9185 8416.2461 -7940.1089 8416.2461 c
-7940.2134 8416.2461 -7940.2974 8416.2656 -7940.2974 8416.4346 c
-7940.2974 8416.7725 -7939.1167 8418.1006 -7938.9263 8418.4375 c
-7938.0845 8419.8936 -7938.0845 8420.5674 -7938.0845 8420.7998 c
-7938.0845 8420.9258 -7938.2734 8421.0527 -7938.6538 8421.0527 c
-7938.8433 8421.0527 -7939.0752 8421.0313 -7939.2017 8421.0313 c
-7939.3281 8421.0117 -7939.8975 8420.7354 -7940.0449 8420.7354 c
-7940.2134 8420.7354 -7940.3193 8420.8633 -7940.3193 8421.0313 c
-7940.3193 8421.2227 -7940.2559 8421.3486 -7940.0654 8421.4961 c
-7939.3921 8422.1074 -7939.3486 8422.1279 -7939.3486 8422.6133 c
-7939.3486 8422.8877 -7940.0449 8424.0898 -7940.0449 8424.3848 c
-7940.0449 8424.7002 -7939.5806 8424.9326 -7939.3066 8424.9326 c
-7938.4424 8424.9326 -7938.21 8423.457 -7938.21 8423.1406 c
-7938.21 8422.9082 -7938.5054 8421.8135 y
-7938.5054 8421.6221 -7938.4424 8421.6221 -7937.9995 8421.6221 c
-7937.6626 8421.6221 -7937.5986 8424.5527 -7937.5986 8424.7637 c
-7937.5986 8424.9326 -7937.6826 8425.0586 -7937.8511 8425.166 c
-7938.1265 8425.3555 -7939.4336 8426.6826 -7939.4121 8428.0957 c
-7939.4121 8430.585 -7937.6406 8431.5322 -7936.9458 8431.6172 c
-7936.5874 8431.6602 -7935.7007 8431.6377 -7935.4058 8431.8076 c
-7934.9424 8432.0391 -7933.8042 8433.1992 -7933.8042 8434.1904 c
-7933.8042 8435.3916 -7934.5215 8435.75 -7934.8774 8435.75 c
-7935.2378 8435.75 -7935.5103 8435.7295 -7935.5103 8435.2441 c
-7935.5103 8435.0332 -7935.3423 8434.8008 -7935.1318 8434.7383 c
-7935.0474 8434.7168 -7934.2881 8434.5273 -7934.2881 8434.2109 c
-7934.2881 8434.0625 -7934.3721 8434.0625 -7934.5835 8434.0625 c
-7935.1318 8434.0625 -7935.8066 8433.8535 -7937.0928 8432.6504 c
-7937.4722 8432.3135 -7938.1265 8432.2295 -7938.5679 8432.2295 c
-7939.0537 8432.2295 -7940.2974 8432.6924 -7940.2974 8434.1904 c
-7940.2974 8436.0234 -7939.4751 8436.7207 -7938.8433 8436.7207 c
-7938.4209 8436.7207 -7937.8936 8436.4033 -7937.8936 8436.1289 c
-7937.8936 8435.793 -7937.9575 8435.3711 -7938.5479 8435.3281 c
-7939.0537 8435.2861 -7939.3066 8435.0537 -7939.3066 8434.7168 c
-7939.3066 8434.5059 -7939.1592 8434.2949 -7938.8218 8434.2949 c
-7938.3154 8434.2949 -7937.7041 8434.8652 -7937.0713 8435.6025 c
-7936.6714 8436.0879 -7935.7007 8436.6152 -7934.9209 8436.6152 c
-7934.1191 8436.6152 -7933.0654 8435.709 -7933.0654 8434.3369 c
-7933.0654 8433.0723 -7934.4995 8431.7637 -7935.2378 8431.2383 c
-7935.9546 8430.7109 -7936.3335 8430.3311 -7936.46 8430.1201 c
-7936.5654 8429.9727 -7936.9033 8429.0234 -7937.1143 8429.0234 c
-7937.2607 8429.0234 -7937.3672 8429.1914 -7937.3672 8429.4033 c
-7937.3672 8429.7197 -7937.1143 8430.3535 -7936.7759 8430.6895 c
-7936.6929 8430.7949 -7936.6494 8430.8584 -7936.6494 8430.9209 c
-7936.6494 8431.0693 -7936.8398 8431.0898 -7936.9873 8431.0898 c
-7937.5767 8431.0898 -7938.7793 8430.1201 -7938.7793 8428.2861 c
-7938.7793 8426.7041 -7937.7881 8425.8613 -7937.6406 8425.8613 c
-7937.5361 8425.8613 -7937.4297 8425.9658 -7937.3672 8426.1777 c
-7935.6592 8432.334 -7930.7822 8433.5576 -7928.3774 8433.5576 c
-7928.2729 8433.5576 -7928.1895 8433.6201 -7928.1895 8433.7695 c
-7928.1895 8433.8945 -7928.1895 8434.9922 -7928.3359 8434.9922 c
-7928.3774 8434.9922 -7928.4414 8434.9697 -7928.5264 8434.9072 c
-7929.0942 8434.4434 -7929.3755 8434.085 -7930.3022 8434.085 c
-7930.7666 8434.085 -7931.5679 8434.6113 -7931.5679 8435.2236 c
-7931.5679 8436.0029 -7930.8936 8436.7207 -7930.4082 8436.7207 c
-7930.0498 8436.7207 -7929.9023 8436.6357 -7929.9023 8436.5098 c
-7929.9023 8436.3818 -7930.3662 8435.9404 -7930.3662 8435.793 c
-7930.3662 8435.5391 -7930.3242 8435.3916 -7929.8809 8435.3916 c
-7929.4814 8435.3916 -7928.7842 8435.5615 -7928.3418 8435.8145 c
-7927.8774 8436.0879 -7926.7393 8436.7207 -7925.7065 8436.7207 c
-7924.9473 8436.7207 -7923.9561 8436.2773 -7923.4702 8435.4766 c
-7923.4287 8435.4121 -7923.3862 8435.3916 -7923.3447 8435.3916 c
-7923.2393 8435.3916 -7923.1543 8435.4766 -7923.1338 8435.625 c
-7923.0913 8436.0234 -7922.7534 8436.7207 -7921.9312 8436.7207 c
-7921.3408 8436.7207 -7920.8135 8436.2139 -7920.8135 8435.7705 c
-7920.8135 8435.6025 -7920.9194 8435.5391 -7921.0239 8435.5391 c
-7921.1094 8435.5391 -7921.4878 8435.793 -7921.5942 8435.793 c
-7921.7407 8435.793 -7922.6479 8435.1807 -7922.7334 8435.0332 c
-7923.5127 8433.7471 -7923.5977 8433.5996 -7924.2295 8433.3457 c
-7924.3984 8433.2617 -7924.3984 8433.1777 -7924.3984 8432.3135 c
-7924.3984 8432.1865 -7924.3984 8431.8906 -7924.5454 8431.7227 c
-7924.8198 8431.4492 -7926.9287 8429.3818 -7927.1392 8429.3818 c
-7927.2241 8429.3818 -7927.4985 8429.6563 -7927.5835 8429.6563 c
-7927.6035 8429.6563 -7927.6255 8429.6563 -7927.6255 8429.6143 C
-7927.6035 8429.4668 l
-7927.6035 8429.2988 -7927.6455 8429.2129 -7927.8564 8429.2129 c
-7927.9199 8429.2129 -7928.1943 8429.3398 -7928.2568 8429.3398 c
-7928.3198 8429.3398 -7928.3623 8428.8975 -7928.4473 8428.8975 c
-7928.4678 8428.8975 -7928.8057 8429.1289 -7928.8896 8429.1289 c
-7929.0166 8429.1289 -7929.1006 8429.0449 -7929.1006 8428.9395 c
-7929.1006 8428.877 -7929.1006 8428.3916 -7929.2065 8428.3916 c
-7929.2915 8428.3916 -7929.5225 8428.6855 -7929.5654 8428.6855 c
-7929.5854 8428.6855 -7929.5854 8428.666 -7929.5854 8428.6016 C
-7929.5439 8428.1807 l
-7929.5439 8428.1162 -7929.5854 8428.0957 -7929.6494 8428.0957 c
-7929.7119 8428.0957 -7929.9658 8428.4121 -7930.0498 8428.4121 c
-7930.0918 8428.4121 -7930.1138 8428.3701 -7930.1138 8428.2861 c
-7930.1138 8428.2441 -7929.9233 8427.5273 -7929.9233 8427.3789 c
-7929.9233 8427.2949 -7929.9658 8427.252 -7930.0078 8427.252 c
-7930.0918 8427.252 -7930.4297 8427.6113 -7930.4722 8427.6113 c
-7930.4927 8427.6113 -7930.4927 8427.6113 -7930.4927 8427.5898 c
-7930.4927 8427.5059 -7930.3882 8427.1465 -7930.3882 8427.127 c
-7930.3882 8427.1055 -7930.4082 8427.084 -7930.4297 8427.084 c
-7930.4722 8427.084 -7930.6826 8427.2949 -7930.7446 8427.2949 c
-7930.7666 8427.2949 -7930.7666 8427.2949 -7930.7666 8427.252 c
-7930.7666 8427.084 -7930.5137 8426.3457 -7930.5137 8426.2822 c
-7930.5137 8426.2607 -7930.5352 8426.2402 -7930.5562 8426.2402 c
-7930.6826 8426.2402 -7931.1055 8426.8105 -7931.1465 8426.8105 c
-7931.1675 8426.8105 -7931.1675 8426.7891 -7931.1675 8426.7256 c
-7931.1675 8426.5352 -7930.8936 8425.6289 y
-7930.8936 8425.6074 -7930.9146 8425.5869 -7930.9351 8425.5869 c
-7931.0615 8425.5869 -7931.4414 8426.1338 -7931.5049 8426.1338 c
-7931.5264 8426.1338 -7931.5264 8426.1338 -7931.5264 8426.0928 c
-7931.2729 8425.1855 -7931.2729 8425.1016 v
-7931.2729 8424.9961 -7931.3154 8424.9541 -7931.3994 8424.9541 c
-7931.4634 8424.9541 -7931.6943 8425.291 -7931.7783 8425.291 c
-7931.8218 8425.291 -7931.8418 8425.25 -7931.8418 8425.1855 c
-7931.7783 8424.6377 L
f
1 D
-7936.0386 8423.9004 m
-7936.1016 8423.9414 -7936.1865 8423.9629 -7936.2495 8423.9629 c
-7936.5874 8423.9629 -7936.6714 8421.96 -7936.6714 8421.7695 c
-7936.6714 8421.707 -7936.6289 8421.666 -7936.5654 8421.666 c
-7935.4272 8421.666 -7933.5498 8423.627 -7933.5498 8424.0469 c
-7933.5498 8424.0898 -7933.5498 8424.1104 -7933.5928 8424.1104 c
-7933.6138 8424.1104 -7933.6553 8424.0898 -7933.6982 8424.0684 c
-7934.0986 8423.7949 -7934.5215 8423.6895 -7935.1104 8423.6895 c
-7935.4902 8423.6895 -7935.7007 8423.752 -7936.0386 8423.9004 c
f
-7934.3306 8427.8633 m
-7933.8882 8428.6855 -7932.8115 8428.6855 -7932.7271 8428.6855 c
-7932.5801 8428.6855 -7932.3906 8428.666 -7932.3906 8428.4961 c
-7932.3906 8428.3066 -7933.4238 8428.0537 -7933.4238 8427.8633 c
-7933.2129 8427.5273 -7933.2129 8427.4424 v
-7933.2129 8427.043 -7933.2129 8427 -7933.0225 8427 c
-7932.7915 8427 -7931.9897 8427.2949 -7931.7378 8428.0117 c
-7931.5474 8428.5391 -7930.5767 8430.2666 -7928.4258 8430.2666 c
-7927.5615 8430.2666 -7927.2446 8430.1201 -7927.0977 8430.1201 c
-7926.7817 8430.1201 -7924.8418 8432.166 -7924.8198 8432.334 c
-7924.7998 8432.4395 -7924.7998 8432.5664 -7924.7998 8432.6719 c
-7924.7998 8432.8828 -7924.7998 8433.2832 -7925.1782 8433.5361 c
-7925.3896 8433.6631 -7925.4951 8433.916 -7925.4951 8434.168 c
-7925.4951 8434.2744 -7925.4951 8434.6328 -7925.2207 8434.6328 c
-7924.9473 8434.6328 -7924.9058 8434.4854 -7924.9058 8434.1904 c
-7924.9058 8434.002 -7924.7358 8433.8945 -7924.5889 8433.8945 c
-7924.4399 8433.8945 -7923.8506 8434.1904 -7923.8506 8434.6113 c
-7923.8506 8434.8438 -7924.1455 8435.9189 -7925.4321 8435.9189 c
-7926.4014 8435.9189 -7926.4014 8435.793 -7926.4014 8434.3994 c
-7926.4014 8433.1357 -7926.3594 8432.7344 -7926.2119 8431.5967 c
-7926.1904 8431.5967 -7926.1904 8431.5752 y
-7926.1904 8431.4277 -7926.3174 8431.3643 -7926.4233 8431.3643 c
-7926.4438 8431.3643 -7926.4648 8431.3848 -7926.4863 8431.3848 c
-7926.6118 8431.4063 -7926.9072 8431.7227 -7927.8145 8431.7002 c
-7929.7119 8431.7002 -7933.9087 8430.1416 -7935.2793 8427.6533 c
-7935.8906 8426.5781 -7936.2705 8425.207 -7936.2705 8424.9541 c
-7936.2705 8424.4053 -7935.2578 8424.2373 -7935.0049 8424.2373 c
-7933.6553 8424.2373 -7932.2847 8425.9023 -7932.2847 8426.3457 c
-7932.2847 8426.3877 -7932.3271 8426.4297 -7932.3486 8426.4297 c
-7932.3906 8426.4297 -7932.4326 8426.4092 -7932.4961 8426.3672 c
-7932.6431 8426.2197 -7933.2334 8425.5654 -7933.8662 8425.5654 c
-7934.5625 8425.5654 -7934.5835 8426.0293 -7934.5835 8426.4512 c
-7934.5835 8426.8945 -7934.5415 8427.4629 -7934.3306 8427.8633 c
f
0 D
-7930.5352 8424.5527 m
-7930.5352 8424.7002 -7930.5352 8425.0176 -7930.2192 8425.0176 c
-7930.1553 8425.0176 -7930.0918 8424.9961 -7930.0278 8424.9121 c
-7929.9863 8424.8262 -7929.8608 8424.3848 -7929.7754 8424.3848 c
-7929.7334 8424.3848 -7929.7119 8424.4053 -7929.7119 8424.4688 c
-7929.7119 8424.7002 -7929.8174 8425.0801 -7929.8174 8425.3135 c
-7929.8174 8425.46 -7929.6694 8425.6289 -7929.5225 8425.6289 c
-7929.3115 8425.6289 -7929.1855 8425.207 -7929.1226 8424.9961 c
-7929.1006 8424.9326 -7929.0586 8424.9121 -7929.0386 8424.9121 c
-7929.0166 8424.9326 -7929.0166 8424.9541 V
-7929.0386 8425.4814 l
-7929.0386 8425.7129 -7929.0386 8425.9023 -7928.8271 8425.9023 c
-7928.6782 8425.9023 -7928.4897 8425.1016 -7928.3418 8425.1016 c
-7928.3198 8425.1016 -7928.2998 8425.123 -7928.2998 8425.1855 c
-7928.2998 8425.25 -7928.3623 8425.5869 -7928.3623 8425.6709 c
-7928.3623 8425.8613 -7928.3418 8426.2822 -7928.1104 8426.2822 c
-7928.0254 8426.2822 -7927.8774 8425.7969 -7927.7935 8425.7969 c
-7927.7729 8425.7969 -7927.7729 8425.8184 -7927.7729 8425.8613 c
-7927.7729 8425.9453 -7927.8994 8426.3037 -7927.8994 8426.3877 c
-7927.8994 8426.4922 -7927.7935 8426.5996 -7927.7095 8426.5996 c
-7927.5835 8426.5996 -7927.3506 8425.9863 -7927.3086 8425.9863 c
-7927.2666 8425.9863 -7927.2446 8426.0508 -7927.2446 8426.1143 c
-7927.2446 8426.2197 -7927.3926 8426.6406 -7927.3926 8426.7256 c
-7927.3926 8426.873 -7927.3286 8426.957 -7927.2666 8426.957 c
-7927.1826 8426.957 -7927.0342 8426.5566 -7926.9502 8426.5566 c
-7926.9072 8426.5566 -7926.8862 8426.6621 -7926.8862 8426.7256 c
-7927.0762 8427.4424 -7927.0762 8427.5898 v
-7927.0762 8427.7168 -7927.0342 8427.7578 -7926.9922 8427.7578 c
-7926.9072 8427.7578 -7926.7178 8427.2949 -7926.6338 8427.2949 c
-7926.5918 8427.2949 -7926.5703 8427.3584 -7926.5703 8427.4424 c
-7926.5703 8427.5898 -7926.7817 8428.1602 -7926.7817 8428.2637 c
-7926.7817 8428.4121 -7926.7817 8428.6016 -7926.6758 8428.6016 c
-7926.6338 8428.6016 -7926.4863 8428.3916 -7926.4438 8428.3916 c
-7926.4014 8428.3916 -7926.3809 8428.4336 -7926.3809 8428.4961 c
-7926.3809 8428.5596 -7926.5073 8428.8555 -7926.5073 8428.918 c
-7926.5073 8429.0449 -7923.9561 8431.7637 -7923.4287 8431.7637 c
-7922.9233 8431.7637 -7922.8594 8431.7637 -7922.7744 8431.9551 c
-7922.6904 8432.1865 -7922.5854 8432.4189 -7922.1426 8432.6924 c
-7921.0039 8433.3242 -7920.8774 8433.4102 -7920.8135 8433.7266 c
-7920.7295 8434.2109 -7920.7085 8434.2529 -7920.3926 8434.4639 c
-7920.2446 8434.5693 -7920.2026 8434.6748 -7920.2026 8434.8223 c
-7920.2026 8435.1807 -7920.2026 8435.2236 -7920.0127 8435.2236 c
-7919.7598 8435.2236 -7919.4214 8434.5488 -7919.4214 8434.1904 c
-7919.4214 8433.2412 -7919.8018 8433.1357 -7920.4126 8432.9658 c
-7920.5615 8432.9248 -7920.7085 8432.8184 -7920.7085 8432.7344 c
-7920.7085 8432.6924 -7920.6875 8432.6719 -7920.6455 8432.6504 c
-7919.7598 8432.1455 -7919.4214 8431.4492 -7919.4214 8430.8789 c
-7919.4214 8430.0781 -7920.7085 8426.3672 -7920.7085 8426.0293 c
-7920.7085 8425.5439 -7920.5615 8425.502 -7920.3711 8425.502 c
-7920.2241 8425.502 -7919.7178 8426.0293 -7919.5903 8426.0293 c
-7919.5073 8426.0293 -7919.4214 8425.9658 -7919.4214 8425.7969 c
-7919.4214 8425.5654 -7919.8657 8424.5322 -7920.8984 8424.5322 c
-7921.4878 8424.5322 -7921.8682 8425.0586 -7921.8682 8425.5215 c
-7921.8682 8426.4727 -7921.5518 8426.6465 -7921.1934 8427.2168 c
-7921.1294 8427.3438 -7921.0879 8427.4697 -7921.0879 8427.5762 c
-7921.0879 8427.8496 -7921.7202 8427.7705 -7922.0786 8427.7705 c
-7922.2256 8427.7705 -7922.3955 8427.7441 -7922.3955 8427.6377 c
-7922.3955 8423.0215 -7925.6426 8419.4717 -7929.5225 8418.7334 c
-7929.8394 8418.6689 -7929.9863 8418.5439 -7929.9863 8418.418 c
-7929.9863 8418.375 -7929.1006 8417.2578 -7927.6255 8417.2578 c
-7925.8535 8417.2578 -7924.7153 8418.7334 -7924.7153 8419.4922 c
-7924.7153 8419.5762 -7924.7568 8419.6406 -7924.8198 8419.6406 c
-7924.9058 8419.6406 -7925.8535 8418.6914 -7926.0854 8418.6914 c
-7926.2119 8418.6914 -7926.3174 8418.7969 -7926.3174 8418.9023 c
-7926.3174 8419.0293 -7926.2334 8419.1543 -7926.0439 8419.3018 c
-7925.9814 8419.3242 -7924.5454 8421.0117 -7924.2515 8421.3486 c
-7923.6401 8422.0654 -7922.8594 8422.8447 -7921.6362 8422.8447 c
-7920.4561 8422.8447 -7919.4214 8421.6445 -7919.4214 8420.8848 c
-7919.4214 8420.1055 -7919.8857 8419.4082 -7920.3711 8419.0078 c
-7921.8896 8417.7422 -7921.8896 8417.3633 -7921.8896 8417.1309 c
-7921.8896 8416.8145 -7921.6992 8416.6895 -7921.4878 8416.6895 c
-7921.1514 8416.6895 -7920.9824 8416.8359 -7920.9824 8417.5098 c
-7920.9824 8417.8477 -7920.6455 8418.1855 -7920.2026 8418.1855 c
-7919.7598 8418.1855 -7919.4434 8417.8066 -7919.4434 8417.1943 c
-7919.4434 8416.584 -7920.2871 8415.8447 -7921.4878 8415.8447 c
-7923.1338 8415.8447 -7923.6182 8417.0039 -7923.6182 8417.4893 c
-7923.6182 8417.8262 -7923.5127 8418.418 -7923.1958 8418.7754 c
-7922.8594 8419.1768 -7922.4595 8419.873 -7922.1846 8420.5898 c
-7921.9521 8421.2432 -7921.4258 8421.6016 -7921.0879 8421.6016 c
-7921.0239 8421.6016 -7921.0039 8421.5801 -7921.0039 8421.5381 c
-7921.0039 8421.4326 -7921.2144 8421.0527 -7921.2144 8420.9688 c
-7921.2144 8420.5898 -7921.1094 8420.3789 -7920.8984 8420.3789 c
-7920.3711 8420.3789 -7920.2656 8421.0313 -7920.2656 8421.2637 c
-7920.2656 8421.75 -7920.6245 8422.3389 -7921.6782 8422.3389 c
-7923.0063 8422.3389 -7924.1245 8420.5898 -7924.1245 8420.5264 c
-7924.1245 8420.5039 -7924.0825 8419.957 -7924.0825 8419.8506 c
-7924.0825 8417.9521 -7925.79 8416.6895 -7927.6255 8416.6895 c
-7929.1855 8416.6895 -7930.3447 8417.9121 -7930.5352 8418.2061 c
-7930.6401 8418.375 -7930.7666 8418.459 -7930.9146 8418.459 c
-7931.2729 8418.459 -7934.1191 8418.3975 -7934.1191 8417.9746 c
-7934.1191 8417.9326 -7933.9937 8417.4688 -7933.8242 8417.4688 c
-7933.7607 8417.4688 -7933.6982 8417.5098 -7933.6353 8417.5742 c
-7933.4438 8417.8066 -7933.0225 8417.9326 -7932.6431 8417.9326 c
-7932.0942 8417.9326 -7931.1895 8417.3418 -7931.1895 8416.6045 c
-7931.1895 8416.3086 -7931.5679 8415.8242 -7931.8838 8415.8242 c
-7932.1377 8415.8242 -7933.1914 8416.541 -7933.4238 8416.541 c
-7933.7402 8416.541 -7933.8662 8416.3926 -7934.1606 8416.0557 c
-7934.3306 8415.8662 -7934.4575 8415.8447 -7934.6465 8415.8447 c
-7934.8154 8415.8447 -7934.9634 8415.9502 -7934.9634 8416.0977 c
-7934.9634 8416.2656 -7934.6465 8416.584 -7934.6265 8416.8574 c
-7934.6265 8417.0039 -7934.6055 8417.2354 -7934.6055 8417.4258 c
-7934.6055 8417.6797 -7934.6265 8418.0381 -7934.8994 8418.0381 c
-7935.7217 8418.0381 -7937.7681 8416.752 -7938.6538 8416.1602 c
-7939.1592 8415.8242 -7939.2432 8415.8242 -7939.3066 8415.8242 c
-7939.4336 8415.8242 -7939.5176 8415.9082 -7939.5176 8416.0557 c
-7939.5176 8416.1816 -7937.0713 8418.334 -7934.8994 8419.0703 c
-7934.5835 8419.1768 -7934.6055 8419.3242 -7934.5625 8419.4922 c
-7934.1406 8421.2432 -7932.5166 8423.416 -7931.9263 8423.416 c
-7931.7783 8423.416 -7931.7158 8423.416 -7931.7158 8423.5215 c
-7931.7158 8423.7305 -7931.6104 8423.9629 -7931.4634 8423.9629 c
-7931.4209 8423.9629 -7931.2524 8423.7305 -7931.21 8423.7305 c
-7931.1255 8423.7305 -7931.0615 8424.1953 -7931.0415 8424.2783 c
-7930.9995 8424.3848 -7930.9146 8424.4688 -7930.8506 8424.4688 c
-7930.7666 8424.4688 -7930.5986 8424.1318 -7930.5352 8424.1318 c
-7930.5137 8424.1318 -7930.4927 8424.1514 -7930.4927 8424.1953 c
-7930.5352 8424.5527 L
f
1 D
-7931.9058 8420.041 m
-7932.0942 8420.4629 -7932.2002 8420.7158 -7932.2002 8421.0957 c
-7932.2002 8421.3486 -7931.7783 8422.5928 y
-7931.7783 8422.6563 -7931.7998 8422.6768 -7931.8633 8422.6768 c
-7932.2847 8422.6768 -7934.0352 8420.4414 -7934.0352 8419.5762 c
-7934.0352 8419.4717 -7933.9722 8419.4082 -7933.8662 8419.4082 c
-7933.8042 8419.4082 -7931.8633 8419.5977 -7931.8633 8419.8301 c
-7931.8633 8419.8936 -7931.8838 8419.957 -7931.9058 8420.041 c
f
-7923.8081 8431.0059 m
-7924.7568 8430.1201 -7925.6846 8429.2559 -7925.6846 8428.707 c
-7925.6846 8428.3701 -7925.6226 8427.9688 -7925.6226 8427.5479 c
-7925.6226 8426.0928 -7926.9722 8424.7637 -7927.8774 8424.3008 c
-7928.3623 8424.0469 -7928.8481 8423.4785 -7928.8481 8423.1191 c
-7928.8481 8423.0137 -7928.8057 8422.9512 -7928.7422 8422.9512 c
-7928.6582 8422.9512 -7928.5942 8422.9717 -7928.5103 8422.9717 c
-7928.4473 8422.9717 -7928.2158 8422.8447 -7928.1519 8422.8447 c
-7928.0049 8422.8447 -7927.6035 8423.5 -7927.4561 8423.5 c
-7927.2446 8423.5 -7927.1826 8423.2891 -7927.1826 8423.1406 c
-7927.1826 8422.7822 -7927.7305 8421.4326 -7928.9951 8421.4326 c
-7929.7554 8421.4326 -7930.0498 8421.875 -7930.0498 8422.2129 c
-7930.0498 8422.8447 -7929.5225 8423.457 -7929.3975 8423.627 c
-7929.3545 8423.668 -7929.3335 8423.71 -7929.3335 8423.752 c
-7929.3335 8423.7949 -7929.3545 8423.8145 -7929.4175 8423.8145 c
-7929.6694 8423.8145 -7931.6519 8422.7822 -7931.6519 8421.0527 c
-7931.6519 8420.6318 -7931.4209 8419.8301 -7930.7666 8419.8301 c
-7928.2998 8419.8301 -7924.1675 8423.6895 -7924.1675 8428.1377 c
-7924.1675 8428.5176 -7924.3984 8429.0664 -7924.4614 8429.4453 c
-7924.4834 8429.4668 -7924.4834 8429.5088 -7924.4834 8429.5498 c
-7924.4834 8429.6768 -7924.4399 8429.8457 -7924.3145 8429.8457 c
-7924.0615 8429.8457 -7922.3955 8429.6563 -7922.0366 8429.6563 c
-7920.3926 8429.6563 -7919.9702 8429.6563 -7919.9702 8430.752 c
-7919.9702 8431.9756 -7921.1094 8432.293 -7921.5098 8432.293 c
-7921.8896 8432.293 -7922.2695 8431.9961 -7922.2695 8431.6377 c
-7922.2695 8431.5322 -7922.0791 8431.0898 -7922.0791 8431.0059 c
-7922.0791 8430.8584 -7922.2065 8430.7744 -7922.3325 8430.7744 c
-7922.4795 8430.7744 -7922.9858 8431.2793 -7923.1338 8431.2793 c
-7923.3862 8431.2793 -7923.6401 8431.1533 -7923.8081 8431.0059 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Ovalado/ Adobe Calligrap) -
(hic Brush Tool/ 5 pt. Ovalado/ Adobe Calligraphic Brush Tool/ ) -
(Plano 5 pt./ Adobe Calligraphic Brush Tool/ Redondo 3 pt./ Ado) -
(be Calligraphic Brush Tool/ Redondo 7 pt./ Adobe Calligraphic ) -
(Brush Tool/ Redondo 15 pt./ Adobe ArtOnPath Brush Tool/ Carbon) -
(cillo/ Adobe ArtOnPath Brush Tool/ Trazo ahusado/ Adobe ArtOnP) -
(ath Brush Tool/ Radio floral/ Adobe PatternOnPath Brush Tool/ ) -
(Pincel de flecha roja / Adobe PatternOnPath Brush Tool/ G\363tico) -
(/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Ovalado)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Ovalado)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Plano 5 pt.)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Redondo 15 pt.)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Redondo 3 pt.)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Redondo 7 pt.)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Carboncillo)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Radio floral)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Trazo ahusado)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(G\763tico)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Pincel de flecha roja )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.860075 0.849699 0.789548 1 ([Registro]) 0 Xs
([Registro])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(Blanco)
Pc
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
(Rojo CMYK)
Pc
0.066896 0.000031 0.877531 0.000031 1 0.945098 0 Xa
(Amarillo CMYK)
Pc
0.797299 0.000031 0.836789 0.000031 0 0.647059 0.317647 Xa
(Verde CMYK)
Pc
0.706264 0.151064 0.000031 0.000031 0 0.678431 0.933333 Xa
(Cian CMYK)
Pc
0.920684 0.911742 0.000031 0.000031 0.180392 0.192157 0.568627 Xa
(Azul CMYK)
Pc
0.003693 0.926177 0.000031 0.000031 0.921569 0 0.545098 Xa
(Magenta CMYK)
Pc
0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.000031 0.856352 0.765133 0.000031 0.933333 0.25098 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.000031 0.761837 0.864897 0.000031 0.941176 0.352941 0.156863 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.000031 0.519036 0.914122 0.000031 0.964706 0.572549 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.000031 0.37937 0.799832 0.000031 0.980392 0.686275 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.08127 0.000031 0.835813 0.000031 0.976471 0.92549 0.192157 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.243046 0.000031 0.886046 0.000031 0.839216 0.870588 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.530205 0.000031 0.871122 0.000031 0.545098 0.772549 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.73312 0.000031 0.860319 0.000031 0.215686 0.701961 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.835416 0.121401 0.891905 0.007782 0 0.576471 0.270588 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.873686 0.338201 0.893889 0.230228 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.743069 0.000031 0.674311 0.000031 0.160784 0.705882 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.777249 0.057679 0.429908 0.000031 0 0.65098 0.611765 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.715724 0.149874 0.000031 0.000031 0.14902 0.662745 0.878431 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.831205 0.490761 0.000031 0.000031 0.105882 0.458824 0.733333 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.924163 0.87863 0.000031 0.000031 0.168627 0.219608 0.560784 Xa
(C=100 M=95 Y=5 K=0)
Pc
0.956939 1 0.25861 0.18027 0.14902 0.133333 0.380392 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.740597 0.92929 0.000031 0.000031 0.396078 0.176471 0.564706 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.537804 0.929015 0.000031 0.000031 0.564706 0.152941 0.556863 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.399756 0.966522 0.2934 0.065919 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.074708 0.954101 0.413123 0.001495 0.85098 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.000031 0.902251 0.133944 0.000031 0.92549 0.160784 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.294102 0.274144 0.402502 0.000031 0.756863 0.705882 0.603922 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.436957 0.466377 0.467628 0.060548 0.603922 0.517647 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.550225 0.521904 0.576074 0.232547 0.443137 0.396078 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.578851 0.605066 0.616449 0.408789 0.352941 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.269932 0.417212 0.602716 0.016663 0.764706 0.6 0.419608 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.342046 0.503166 0.706813 0.101961 0.658824 0.486275 0.309804 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.393439 0.596673 0.764614 0.258701 0.541176 0.364706 0.231373 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.424842 0.632654 0.871397 0.383764 0.458824 0.298039 0.156863 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.437263 0.693172 1 0.51931 0.376471 0.219608 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.529686 0.733516 0.888579 0.727108 0.231373 0.137255 0.078431 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Degradado lineal) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Degradado lineal)
Pc
Bb
2 (Suavizar hacia negro) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Suavizar hacia negro)
Pc
Bb
0 0 0 0 Bh
2 (Degradado radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Degradado radial)
Pc
Bb
0 0 0 0 Bh
2 (Vi\761eta negra suave) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Vi\761eta negra suave)
Pc
Bb
2 (Puesta de sol en el desierto) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Puesta de sol en el desierto)
Pc
Bb
0 0 0 0 Bh
2 (Radial cobre) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial cobre)
Pc
(Motivo de pez) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Motivo de pez)
Pc
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.699977 0.617609 0.565789 0.464118 0.25098 0.25098 0.254902 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.655329 0.560204 0.504021 0.275059 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.603326 0.50399 0.453925 0.147341 0.427451 0.431373 0.439216 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.550133 0.45005 0.394629 0.059052 0.501961 0.505882 0.517647 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.492531 0.386633 0.342779 0.011963 0.572549 0.580392 0.592157 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.411139 0.312749 0.275364 0.000031 0.65098 0.658824 0.670588 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.313756 0.22916 0.207156 0.000031 0.733333 0.741176 0.74902 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.219089 0.150149 0.142763 0.000031 0.815686 0.823529 0.827451 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.120241 0.079866 0.072541 0.000031 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.064485 0.046387 0.036957 0.000031 0.945098 0.945098 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.000031 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.000031 0.716213 0.899199 0.000031 0.945098 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.015869 0.098238 0.8981 0.000031 1 0.866667 0.082353 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.809689 0.002502 0.867491 0.000031 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.922759 0.820706 0.000031 0.000031 0.133333 0.25098 0.6 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.611841 0.85211 0.000031 0.000031 0.498039 0.247059 0.592157 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 0 1 0 0 1 1 255 79 79 0 50 Lb
(Capa 3) Ln
1 A
0 A
1 Ap
0 D
0 O
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
500 0 m
0 0 L
0 500 L
500 500 L
500 0 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Capa 2) Ln
0 A
u
u
0 Ap
0 O
0.838315 0.666224 0.000031 0.000031 0 0.345098 0.94902 Xa
0 J 0 j 1 w 4 M []0 d0 XR
69 246.5 m
70.625 223.9434 116.75 242.666 115 258.4165 C
114.895 261.6128 109.5454 270.9629 91.7041 270.2842 c
73.8628 269.6055 68 252 69 246.5 C
f
154.0645 274.4473 m
146.3071 290.7397 115.749 292.3906 85.811 278.1357 c
85.5171 277.9956 85.2319 277.8481 84.9404 277.7065 C
88.3335 276.6665 L
111.415 279.063 122 265.333 V
126.3335 276.3335 120.3335 286 V
138.667 282.6826 138.667 268.6665 v
138.667 258.5415 132.9585 253.1665 Y
134.8672 251.2266 137.375 246.5 v
139.6563 242.2002 140.2334 237.875 140.3193 237.126 C
153.2603 249.6689 159.1108 263.8496 154.0645 274.4473 c
f
80 227 m
55.3335 228.333 55.3335 242.333 Y
51.667 251.2354 74.3335 270.2842 V
73.7393 271.417 L
51.2632 256.957 39.0049 236.7832 45.6523 222.8252 c
53.4111 206.5313 83.9683 204.8799 113.9063 219.1348 c
116.1333 220.1953 118.2847 221.3203 120.3735 222.4893 C
122.0029 228.8193 122.2891 229.6787 122.5625 234.125 c
122.9512 240.4404 121.667 244 Y
104.6665 225.667 80 227 v
f
U
u
*u
208.25 226 m
204.5938 233.2188 L
176.375 233.2188 L
172.7188 226 L
157.875 226 L
180.5 268.6563 L
200.6875 268.6563 L
223 226 l
208.25 226 L
f
1 D
200.0313 242.5625 m
191.8125 258.7188 L
189.2188 258.7188 L
181 242.5625 l
200.0313 242.5625 L
f
*U
*u
0 D
216.2188 268.6563 m
267.8438 268.6563 L
267.8438 257.7813 L
248.875 257.7813 L
248.875 226 L
235.2188 226 L
235.2188 257.7813 L
216.2188 257.7813 l
216.2188 268.6563 L
f
*U
*u
311.3438 226 m
307.6875 233.2188 L
279.4688 233.2188 L
275.8125 226 L
260.9688 226 L
283.5938 268.6563 L
303.7813 268.6563 L
326.0938 226 l
311.3438 226 L
f
1 D
303.125 242.5625 m
294.9063 258.7188 L
292.3125 258.7188 L
284.0938 242.5625 l
303.125 242.5625 L
f
*U
*u
0 D
353.2813 250.1875 m
383 250.1875 L
383.041 249.25 383.0625 248.6455 383.0625 248.375 c
383.0625 242.791 382.9063 238.4785 382.5938 235.4375 c
382.0938 230.5205 379.3018 227.541 374.2188 226.5 c
371.5938 225.9795 368.7188 225.667 365.5938 225.5625 c
362.2813 225.4375 358.3535 225.375 353.8125 225.375 c
345.75 225.375 339.9893 225.667 336.5313 226.25 c
331.7393 227.041 328.7705 229.25 327.625 232.875 c
327.0625 234.6455 326.7393 236.6768 326.6563 238.9688 c
326.5518 241.8438 326.5 244.9063 326.5 248.1563 c
326.5 253.6563 326.7598 257.5205 327.2813 259.75 c
328.0313 262.854 329.3223 265.0415 331.1563 266.3125 c
332.1143 267 333.3174 267.5259 334.7656 267.8906 c
336.2129 268.2549 338.2598 268.5518 340.9063 268.7813 c
344.6348 269.1143 349.6768 269.2813 356.0313 269.2813 c
364.1973 269.2813 369.9785 268.958 373.375 268.3125 c
376.8125 267.6665 379.2285 266.5205 380.625 264.875 c
381.8535 263.3955 382.6035 261.0625 382.875 257.875 c
382.9375 257.0205 382.9688 255.708 382.9688 253.9375 c
369.9688 253.9375 L
369.9473 255.104 369.8848 255.8955 369.7813 256.3125 c
369.4893 257.375 368.5625 258.0103 367 258.2188 c
364.9375 258.4893 360.875 258.625 354.8125 258.625 c
349.416 258.625 345.6768 258.4478 343.5938 258.0938 c
341.6143 257.7393 340.416 256.6563 340 254.8438 c
339.666 253.4688 339.5 251.0205 339.5 247.5 c
339.5 243.458 339.6768 240.6973 340.0313 239.2188 c
340.4893 237.2393 341.9063 236.1348 344.2813 235.9063 c
345.4473 235.8018 348.9688 235.708 354.8438 235.625 c
361.2598 235.666 365.3955 235.791 367.25 236 c
368.9375 236.2705 369.9063 237.0098 370.1563 238.2188 c
370.3018 238.9688 370.375 240.1143 370.375 241.6563 c
353.2813 241.6563 l
353.2813 250.1875 L
f
*U
*u
417 269.2813 m
425.958 269.2813 432.166 269.0518 435.625 268.5938 c
440.6035 267.9268 443.6563 265.5625 444.7813 261.5 c
445.5518 258.708 445.9375 253.979 445.9375 247.3125 c
445.9375 240.666 445.5518 235.9473 444.7813 233.1563 c
443.6563 229.0938 440.6035 226.7285 435.625 226.0625 c
432.1875 225.6045 425.8535 225.375 416.625 225.375 c
407.416 225.375 401.083 225.6045 397.625 226.0625 c
392.6455 226.7285 389.5938 229.0938 388.4688 233.1563 c
387.6973 235.9473 387.3125 240.666 387.3125 247.3125 c
387.3125 254 387.6973 258.729 388.4688 261.5 c
389.5938 265.5625 392.6455 267.9268 397.625 268.5938 c
401.1035 269.0518 407.5625 269.2813 417 269.2813 c
f
1 D
416.125 258.1875 m
409.6035 258.1875 405.6455 258.0103 404.25 257.6563 c
402.5625 257.2188 401.4785 256.229 401 254.6875 c
400.541 253.1665 400.3125 250.3643 400.3125 246.2813 c
400.3125 243.6348 400.4473 241.7285 400.7188 240.5625 c
401.2393 238.3955 402.8125 237.1563 405.4375 236.8438 c
407.375 236.5938 411.1035 236.4688 416.625 236.4688 c
422.1455 236.4688 425.875 236.5938 427.8125 236.8438 c
430.4375 237.1563 432 238.3955 432.5 240.5625 c
432.791 241.75 432.9375 243.5938 432.9375 246.0938 c
432.9375 249.1563 432.8535 251.333 432.6875 252.625 c
432.3955 254.7705 431.7285 256.1978 430.6875 256.9063 c
429.75 257.5728 427.7813 257.979 424.7813 258.125 c
423.6973 258.1665 420.8125 258.1875 416.125 258.1875 c
f
*U
U
u
*u
0 D
461.8965 272.5249 m
463.9375 272.5249 465.9297 272.001 467.875 270.9541 c
469.8184 269.9063 471.333 268.4082 472.418 266.458 c
473.5029 264.5088 474.0459 262.4756 474.0459 260.3594 c
474.0459 258.2646 473.5117 256.2505 472.4424 254.3169 c
471.374 252.3833 469.875 250.8818 467.9473 249.8135 c
466.0186 248.7441 464.002 248.21 461.8965 248.21 c
459.791 248.21 457.7744 248.7441 455.8457 249.8135 c
453.918 250.8818 452.416 252.3833 451.3418 254.3169 c
450.2676 256.2505 449.7305 258.2646 449.7305 260.3594 c
449.7305 262.4756 450.2764 264.5088 451.3662 266.458 c
452.457 268.4082 453.9736 269.9063 455.918 270.9541 c
457.8623 272.001 459.8555 272.5249 461.8965 272.5249 c
f
1 D
461.8965 270.5107 m
460.1885 270.5107 458.5264 270.0728 456.9092 269.1973 c
455.293 268.3218 454.0273 267.0703 453.1152 265.4434 c
452.2012 263.8154 451.7451 262.1211 451.7451 260.3594 c
451.7451 258.6084 452.1934 256.9297 453.0908 255.3242 c
453.9873 253.7178 455.2422 252.4663 456.8535 251.5693 c
458.4648 250.6724 460.1455 250.2241 461.8965 250.2241 c
463.6475 250.2241 465.3281 250.6724 466.9395 251.5693 c
468.5508 252.4663 469.8027 253.7178 470.6943 255.3242 c
471.5859 256.9297 472.0313 258.6084 472.0313 260.3594 c
472.0313 262.1211 471.5781 263.8154 470.6699 265.4434 c
469.7627 267.0703 468.4971 268.3218 466.875 269.1973 c
465.2529 270.0728 463.5938 270.5107 461.8965 270.5107 c
f
0 D
456.5625 253.6401 m
456.5625 266.7241 L
461.0586 266.7241 L
462.5947 266.7241 463.7061 266.6035 464.3945 266.3613 c
465.0811 266.1201 465.6289 265.6982 466.0371 265.0967 c
466.4453 264.4951 466.6504 263.856 466.6504 263.1792 c
466.6504 262.2231 466.3086 261.3906 465.627 260.6816 c
464.9443 259.9727 464.0391 259.5752 462.9121 259.4893 c
463.373 259.2959 463.7441 259.0649 464.0234 258.7964 c
464.5498 258.2808 465.1943 257.416 465.957 256.2021 c
467.5527 253.6401 L
464.9746 253.6401 L
463.8145 255.7026 L
462.9004 257.3247 462.165 258.3398 461.6064 258.748 c
461.2197 259.0488 460.6563 259.1992 459.9141 259.1992 c
458.6738 259.1992 L
458.6738 253.6401 l
456.5625 253.6401 L
f
1 D
458.6738 261.0039 m
461.2363 261.0039 L
462.4609 261.0039 463.2959 261.1865 463.7412 261.5518 c
464.1875 261.917 464.4102 262.4004 464.4102 263.002 c
464.4102 263.3887 464.3027 263.7354 464.0879 264.041 c
463.873 264.3477 463.5752 264.5757 463.1934 264.7261 c
462.8125 264.8765 462.1055 264.9517 461.0742 264.9517 c
458.6738 264.9517 l
458.6738 261.0039 L
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
